{"version":3,"sources":["images/hero.png","images/bubble.png","images/logo.png","images/champion.png","images/signupImage.svg","images/loginImage.svg","firebase.js","components/chat/ChatInput.jsx","components/home/section1/Section1.jsx","action.js","components/header/Header.jsx","components/home/Home.jsx","components/dashboard/nav-sidebar/NavSidebar.jsx","components/updateProfile/UpdateProfile.jsx","components/dashboard/job-post-delete-update/PostJob.jsx","components/dashboard/job-post-delete-update/UpdateJob.jsx","components/dashboard/jobsNew/JobItem.jsx","components/dashboard/viewJobs/Jobs.jsx","components/dashboard/job-post-delete-update/DeleteJob.jsx","components/sign-in-up/Wait.js","components/dashboard/questionPool/QuestionItem.jsx","components/dashboard/questionPool/AddQuestion.jsx","components/dashboard/questionPool/UpdateQuestion.jsx","components/dashboard/questionPool/DeleteQuestion.jsx","components/dashboard/questionPool/QuestionPool.jsx","components/dashboard/quiz/Quiz.jsx","components/dashboard/dashboardRecruiter/DashboardRecruiter.jsx","components/dashboard/jobsNew/JobsNew.jsx","components/applicants/Applicants.jsx","components/dashboard/test/Test.jsx","components/dashboard/test/AddTest.jsx","components/dashboard/test/ViewTest.jsx","components/sign-in-up/RecruiterSignUp.jsx","components/sign-in-up/RecruiterSignIn.jsx","App.js","reportWebVitals.js","index.js","images/postjob.jpg","images/avatar.jpg"],"names":["module","exports","firebaseConfig","apiKey","process","FIREBASE_API_KEY","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","database","getDatabase","ChatInput","user","useSelector","state","value","useState","message","setMessage","messages","setMessages","lastMessages","setLastMessages","userMessages","setUserMessages","userID","setUserID","chat","setChat","receiverEmail","setReceiverEmail","sendMessage","a","now","Date","getTime","console","log","chatID","push","child","ref","text","avatar","email","name","receiver","read","_id","createdAt","order","type","uid","username","storeLastMessages","set","lastMessage","profile_url","id","seen","getChat","onValue","snapshot","data","val","Object","values","getUserMessages","entries","useEffect","placeholder","onChange","e","target","onClick","map","i","key","receiverID","onSend","Section1","className","to","src","Image2","alt","section1Image","initialStateValue","isLoggedIn","userSlice","createSlice","initialState","reducers","login","action","payload","logout","actions","Header","props","header","setHeader","seterror","dropdown","setdropdown","listenScrollEvent","window","scrollY","dispatch","useDispatch","navigate","useNavigate","addEventListener","whiteColor","authRecruiter","removeEventListener","handleLogout","axios","get","headers","withCredentials","then","res","status","catch","err","response","authRecruiterAPICall","logo","color","maxInitials","round","size","innerWidth","style","marginLeft","cursor","Home","NavSidebar","useForm","register","handleSubmit","formState","errors","Cookies","remove","Profile","UpdateProfile","error","setmessage","onSubmit","password","confirmPassword","patch","required","pattern","minLength","companyName","companyDescription","totalEmployees","founded","PostJob","tests","setTests","refresh","setRefresh","getAllTests","toggleButtonIsChecked","post","timer","setTimeout","clearTimeout","isChecked","setIsChecked","isOpenPostJob","width","test","index","testName","jobTitle","jobDescription","jobLocation","experienceRequired","workLevel","employmentType","PostJobImage","UpdateJob","put","UpdateJobImage","JobItem","left","zIndex","employeementType","display","fontStyle","fontWeight","Jobs","jobs","setJobs","setJobDetails","getAllJobs","handleJobClick","job","DeleteJob","item","jobId","alert","Wait","textAlign","fontFamily","paddingTop","fontSize","lineHeight","QuestionItem","question","options","option","category","difficultyLevel","AddQuestion","optionList","setOptionList","handleOptionAdd","style2","borderRadius","backgroundColor","paddingRight","paddingLeft","optionButtonStyle","marginTop","padding","float","margin","border","htmlFor","singleOption","onBlur","list","handleOptionChange","length","splice","handleOptionRemove","paddingBottom","UpdateQuestion","answer","answerList","setanserList","diffLevel","setDiffLevel","setDifficultyLevel","handleAnswerAdd","marginRight","singleAnswer","handleAnswerChange","handleAnswerRemove","oneDifficulty","DeleteQuestion","questionId","QuestionPool","selectedQuestion","setSelectedQuestion","questions","setQuestions","isOpenAddQuestion","setIsOpenAddQuestion","isOpenView","setIsOpenView","isOpenUpdate","setIsOpenUpdate","togglePopupAddQuestion","togglePopupView","togglePopupUpdate","getAllQuestions","deleteQuestion","delete","textDecoration","element","trueAnswer","questionOptions","filter","isCorrect","slice","viewQuestion","updateQuestion","Quiz","answerOptions","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","nextQuestion","handleAnswerButtonClick","DashboardRecruiter","JobsNew","selectedJob","setSelectedJob","deleteJob","styleLink","viewJob","updateJob","applicants","setApplicants","getAllApplicantsById","jobApplies","useParams","href","cv","CV","Test","position","AddTest","h1Style","ViewTest","styleUpdateDeleteButton","isOpenDelete","setIsOpenDelete","isOpenUpdateTestName","setIsOpenUpdateTestName","togglePopupUpdateTestName","togglePopupDelete","subject","RecruiterSignUp","SignupImage","RecruiterSignIn","token","LoginImage","App","decoded","path","Applicants","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","userReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91248981.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hero.c7f4f270.png\";","module.exports = __webpack_public_path__ + \"static/media/bubble.4089c6bd.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.4eef13ad.png\";","module.exports = __webpack_public_path__ + \"static/media/champion.b74fcb25.png\";","module.exports = __webpack_public_path__ + \"static/media/signupImage.80d7e19d.svg\";","module.exports = __webpack_public_path__ + \"static/media/loginImage.d39e5160.svg\";","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getDatabase } from \"firebase/database\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: process.env.FIREBASE_API_KEY,\r\n  authDomain: \"wehire-44d81.firebaseapp.com\",\r\n  databaseURL:\r\n    \"https://wehire-44d81-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"wehire-44d81\",\r\n  storageBucket: \"wehire-44d81.appspot.com\",\r\n  messagingSenderId: \"38766377171\",\r\n  appId: \"1:38766377171:web:09ad7aa9c1ab3efb003c26\",\r\n  measurementId: \"G-YQM48N6SH8\",\r\n};\r\n\r\n// Initialize Firebase\r\ninitializeApp(firebaseConfig);\r\nconst database = getDatabase();\r\n\r\nexport default database;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport database from \"../../firebase\";\r\nimport { useSelector } from \"react-redux\";\r\n//import { ref, set } from \"firebase/database\";\r\nimport { ref, set, push, child, onValue } from \"firebase/database\";\r\n\r\nexport default function ChatInput() {\r\n  const user = useSelector((state) => state.user.value);\r\n  const [message, setMessage] = useState(\"hello\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [lastMessages, setLastMessages] = useState([]);\r\n  const [userMessages, setUserMessages] = useState([]);\r\n  const [userID, setUserID] = useState();\r\n  const [chat, setChat] = useState();\r\n  //const [exists, setExists] = useState();\r\n  const [receiverEmail, setReceiverEmail] = useState(\"\");\r\n\r\n  const sendMessage = async () => {\r\n    // set(ref(database, \"users/user\" + user.id), {\r\n    //   email: user.email,\r\n    // });\r\n    // let data;\r\n    // //console.log(await checkChat());\r\n    // onValue(\r\n    //   ref(database, `chat/${user.id}-${receiverEmail}` + user.id),\r\n    //   (snapshot) => {\r\n    //     data = snapshot.exists();\r\n    //     console.log(data);\r\n    //     //var exists=data;\r\n    //   }\r\n    // );\r\n    // console.log(\"data\", data);\r\n    const now = new Date().getTime();\r\n    console.log(now);\r\n    var chatID = `626a38d101604067a6138fc5-62221bb93fec6560904a1164`;\r\n    push(child(ref(database), \"chat/\" + chatID), {\r\n      text: message,\r\n      avatar:\r\n        \"http://3.13.164.94:5000/api/file/public/uploads/file-1646809812464.jpg\",\r\n      email: \"626a38d101604067a6138fc5\",\r\n      name: \"Medicos Connect\",\r\n      receiver: \"62221bb93fec6560904a1164\",\r\n      read: 0,\r\n      _id: now,\r\n      createdAt: now,\r\n      order: -1 * now,\r\n      type: \"Support\",\r\n      uid: \"626a38d101604067a6138fc5\",\r\n      username: \"Medicos Connect\",\r\n    });\r\n    //console.log(exists);\r\n    storeLastMessages(chatID, now);\r\n  };\r\n  // function to check if chat already exists\r\n  // const checkChat = async () => {\r\n  //   return child(ref(database), `chat/${user.id}-${userID}`, (snapshot) => {\r\n  //     if (snapshot.val() !== null) {\r\n  //       setExists(true);\r\n  //       return true;\r\n  //     } else {\r\n  //       setExists(false);\r\n  //       return false;\r\n  //     }\r\n  //   });\r\n  // };\r\n  const storeLastMessages = (chatID, now) => {\r\n    set(\r\n      ref(database, `users/626a38d101604067a6138fc5/62221bb93fec6560904a1164`),\r\n      {\r\n        email: \"626a38d101604067a6138fc5\",\r\n        lastMessage: message,\r\n        name: \"Medicos Connect\",\r\n        //receiverID: receiverEmail,\r\n        profile_url:\r\n          \"https://api-dev.medicosconnect.com/public/uploads/file-1651062197246.jpg\",\r\n        id: chatID,\r\n        createdAt: now,\r\n        seen: false,\r\n        type: \"Support\",\r\n      }\r\n    );\r\n    set(\r\n      ref(database, `users/62221bb93fec6560904a1164/626a38d101604067a6138fc5`),\r\n      {\r\n        email: \"626a38d101604067a6138fc5\",\r\n        lastMessage: message,\r\n        //receiverID: receiverEmail,\r\n        id: chatID,\r\n        profile_url:\r\n          \"https://api-dev.medicosconnect.com/public/uploads/file-1651062197246.jpg\",\r\n        createdAt: now,\r\n        seen: false,\r\n        type: \"Support\",\r\n        name: \"Medicos Connect\",\r\n      }\r\n    );\r\n  };\r\n  const getChat = async (chat) => {\r\n    // console.log(await checkChat());\r\n    // console.log(exists);\r\n    onValue(child(ref(database), \"chat/\" + chat), (snapshot) => {\r\n      let data = snapshot.val();\r\n      if (data) {\r\n        let messages = Object.values(data);\r\n        console.log(\"messages\", messages);\r\n        setMessages(messages);\r\n      }\r\n    });\r\n  };\r\n  //get user messages\r\n  const getUserMessages = () => {\r\n    onValue(child(ref(database), `users/${user.id}`), (snapshot) => {\r\n      let data = snapshot.val();\r\n      //console.log(\"data\", data);\r\n      if (data) {\r\n        let lastMessages = Object.entries(data);\r\n        setLastMessages(lastMessages);\r\n      }\r\n    });\r\n    onValue(child(ref(database), `users/${userID}/` + user.id), (snapshot) => {\r\n      let data = snapshot.val();\r\n      if (data) {\r\n        let messages = Object.values(data);\r\n        setUserMessages(messages);\r\n      }\r\n    });\r\n  };\r\n  const onSend = (id) => {\r\n    console.log(\"id\", id);\r\n    const now = new Date().getTime();\r\n    push(child(ref(database), id), {\r\n      message: message,\r\n      user: user.email,\r\n      receiverID: receiverEmail,\r\n      createdAt: now,\r\n    });\r\n    storeLastMessages(id, now);\r\n  };\r\n  useEffect(() => {\r\n    getUserMessages();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <input\r\n        type={\"text\"}\r\n        placeholder={\"Enter receivers email\"}\r\n        onChange={(e) => setReceiverEmail(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Type a message...\"\r\n        onChange={(e) => setMessage(e.target.value)}\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Type user id for messages\"\r\n        onChange={(e) => setUserID(e.target.value)}\r\n      />\r\n      <button onClick={getUserMessages}>Get Messages</button>\r\n      <div>\r\n        <h1>My Messages</h1>\r\n        {lastMessages.map((message, i) => (\r\n          <div key={i}>\r\n            <p\r\n              onClick={() => {\r\n                console.log(\"chat id\", message[1].id, message);\r\n                setChat(message[1].id);\r\n                setReceiverEmail(message[0]);\r\n                getChat(message[1].id);\r\n              }}\r\n            >\r\n              {message[0]}: {message[1].lastMessage}\r\n            </p>\r\n          </div>\r\n        ))}\r\n        <h1>User Messages</h1>\r\n        {userMessages.map((message, i) => (\r\n          <div key={i}>\r\n            <p>{message.message}</p>\r\n          </div>\r\n        ))}\r\n        <h1>Chat</h1>\r\n        {messages.map((message, i) => (\r\n          <div key={i}>\r\n            <p>{message.text}</p>\r\n          </div>\r\n        ))}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type a message...\"\r\n          onChange={(e) => setMessage(e.target.value)}\r\n        />\r\n        <button onClick={() => onSend(chat)}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport './section1.css'\r\nimport section1Image from '../../../images/hero.png'\r\nimport Image2 from '../../../images/bubble.png'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Section1() {\r\n    return (\r\n        <div className=\"section1\">\r\n            <div className=\"section1-left-container\">\r\n                <div className=\"section1-left-box\">\r\n                    <div className=\"section1-left-wrapper\">\r\n                        <h1>Employment Problem? </h1>\r\n                        <h1>We Have The Solution !</h1>\r\n                        <p>Quality Recruitment At Your Service.</p>\r\n                        <div className=\"section1-search-bar\">\r\n                            <input type=\"text\" id=\"search\" placeholder=\"Job Title, Keywords or Company\" />\r\n                            <Link to=\"/recruitersignup\">Join Now</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bubbleImage-container\">\r\n                    <img src={Image2} alt=\"bubble\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"section1-right-container\">\r\n                <img src={section1Image} alt=\"happy jobs\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialStateValue = {\r\n  email: \"\",\r\n  id: 0,\r\n  isLoggedIn: false,\r\n};\r\nconst userSlice = createSlice({\r\n  name: \"recruiter\",\r\n  initialState: {\r\n    value: initialStateValue,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.value = initialStateValue;\r\n    },\r\n  },\r\n});\r\nexport const { login, logout } = userSlice.actions;\r\nexport default userSlice.reducer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logout } from \"../../action\";\r\nimport { login } from \"../../action\";\r\nimport axios from \"axios\";\r\nimport \"./header.css\";\r\nimport { CgMenuRight } from \"react-icons/cg\";\r\nimport { BsChevronDown } from \"react-icons/bs\";\r\nimport Avatar from \"react-avatar\";\r\nimport logo from \"../../images/logo.png\";\r\n\r\nexport default function Header(props) {\r\n  const [header, setHeader] = useState(\"header\");\r\n  const [error, seterror] = useState();\r\n  const [dropdown, setdropdown] = useState(false);\r\n\r\n  const listenScrollEvent = () => {\r\n    window.scrollY > 10 ? setHeader(\"header2\") : setHeader(\"header\");\r\n  };\r\n  const recruiter = 1;    //// Problem here\r\n  // = useSelector((state) => state.recruiter.value);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", listenScrollEvent);\r\n    if (props.whiteColor === true) {\r\n      setHeader(\"header2\");\r\n    }\r\n    authRecruiter();\r\n    return () => window.removeEventListener(\"scroll\", listenScrollEvent);\r\n  }, []);\r\n\r\n  const handleLogout = async () => {\r\n    const response = await axios\r\n      .get(`http://13.232.134.204:5000/recruiter/logout`, {\r\n        headers: {\r\n          \"x-access-token\": \"application/json\",\r\n        },\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          dispatch(logout());\r\n          navigate(\"/\");\r\n        } else {\r\n          console.log(\"error\");\r\n          seterror(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err\", err.response.data.message);\r\n        // seterror(err.response.data.message);\r\n      });\r\n  };\r\n\r\n  const authRecruiterAPICall = async () => {\r\n    const response = await axios.get(\"http://localhost:5000/recruiter/authRecruiter\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      withCredentials: true,\r\n    });\r\n    return await response;\r\n  };\r\n  const authRecruiter = () => {\r\n    authRecruiterAPICall()\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          dispatch(login({ email: res.data.email, isLoggedIn: true }));\r\n        } else {\r\n          console.log(\"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // console.log(\"err\", err.response.data.message);\r\n      });\r\n  };\r\n  return (\r\n    <div className={header}>\r\n      <div className=\"header-left-container\">\r\n        <img src={logo} alt=\"WeHire\" />\r\n      </div>\r\n      <div className=\"header-right-container\">\r\n        <div className=\"header-right-wrapper\">\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            {/* <li>\r\n              <Link to=\"/jobs\">Jobs</Link>\r\n            </li> */}\r\n            {recruiter.isLoggedIn ? (\r\n              <div className=\"header-loggedin\">\r\n                <div\r\n                  className=\"header-loggedin-wrapper\"\r\n                  onClick={() => setdropdown(!dropdown)}\r\n                >\r\n                  <Avatar\r\n                    name={recruiter.email}\r\n                    color=\"var(--button)\"\r\n                    maxInitials={2}\r\n                    round={true}\r\n                    size={window.innerWidth > 767 ? 40 : 33}\r\n                    className=\"avatar\"\r\n                  />\r\n                  <BsChevronDown\r\n                    size={window.innerWidth < 767 ? 12 : 14}\r\n                    style={{ marginLeft: \"5px\" }}\r\n                  />\r\n                </div>\r\n                <ul id={dropdown ? \"header-dropdown\" : \"\"}>\r\n                  <li>Update Profile</li>\r\n                  <li onClick={handleLogout}>Logout</li>\r\n                </ul>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <li>\r\n                  <Link to=\"/recruitersignup\">Join Now</Link>\r\n                </li>\r\n\r\n                <li>\r\n                  <Link to=\"/recruitersignin\" className=\"signin-button\">\r\n                    Sign In\r\n                  </Link>\r\n                </li>\r\n              </>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"menu-bar\">\r\n        <CgMenuRight cursor=\"pointer\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport Section1 from './section1/Section1'\r\nimport Header from '../header/Header'\r\nimport \"./home.css\"\r\nimport Section2 from './section2/Section2'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div className=\"home\">\r\n            <Header/>\r\n            <Section1/>\r\n            {/* <Section2/> */}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import { login } from \"../../../action\";\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Profile from '../../../images/avatar.jpg';\r\nimport axios from 'axios';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logout } from \"../../../action\";\r\nimport './nav-side-bar.css';\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport default function NavSidebar() {\r\n    const [error, seterror] = useState();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n  } = useForm();\r\n    const handleLogout = async () => {\r\n        Cookies.remove(\"accessTokenRecruiter\");\r\n        navigate('/');\r\n      };\r\n  return (\r\n    <>\r\n        <div className=\"recruiter-nav-sidebar-sidebar\">\r\n            <div className=\"recruiter-nav-sidebar-logo-details\">\r\n            <i className='bx bxl-c-plus-plus'></i>\r\n            <span className=\"recruiter-nav-sidebar-logo_name\">WeHire</span>\r\n            </div>\r\n            <ul className=\"recruiter-nav-sidebar-nav-links\">\r\n                <li>\r\n                <Link to=\"/dashboardrecruiter\" className=\"recruiter-nav-sidebar-active\">\r\n                    <i className='bx bx-grid-alt' ></i>\r\n                    <span className=\"recruiter-nav-sidebar-links_name\">Dashboard</span>\r\n                </Link>\r\n                </li>\r\n                <li>\r\n                <Link to=\"/jobsnew\">\r\n                    <i className='bx bx-box' ></i>\r\n                    <span className=\"recruiter-nav-sidebar-links_name\">Jobs</span>\r\n                </Link>\r\n                </li>\r\n                <li>\r\n                <Link to=\"/questionpool\">\r\n                    <i className='bx bx-list-ul' ></i>\r\n                    <span className=\"recruiter-nav-sidebar-links_name\">Questions</span>\r\n                </Link>\r\n                </li>\r\n                <li>\r\n                <Link to=\"/test\">\r\n                    <i className='bx bx-pie-chart-alt-2' ></i>\r\n                    <span className=\"recruiter-nav-sidebar-links_name\">Test</span>\r\n                </Link>\r\n                </li>\r\n                <li>\r\n                <Link to=\"#\">\r\n                    <i className='bx bx-message' ></i>\r\n                    <span className=\"recruiter-nav-sidebar-links_name\">Messages</span>\r\n                </Link>\r\n                </li>\r\n                <li>\r\n                <Link to=\"/updateprofile\">\r\n                    <i className='bx bx-cog' ></i>\r\n                    <span className=\"recruiter-nav-sidebar-links_name\">Update Profile</span>\r\n                </Link>\r\n                </li>\r\n                <li className=\"recruiter-nav-sidebar-log_out\">\r\n                <Link onClick={handleLogout} to=\"#\">\r\n                    <i className='bx bx-log-out'></i>\r\n                    <span  className=\"recruiter-nav-sidebar-links_name\">Log out</span>\r\n                </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <section className=\"recruiter-nav-sidebar-home-section\">\r\n        <nav>\r\n            <div className=\"recruiter-nav-sidebar-sidebar-button\">\r\n                <i className='bx bx-menu sidebarBtn'></i>\r\n                {/* <span className=\"recruiter-nav-sidebar-dashboard\">Dashboard</span> */}\r\n            </div>\r\n             <div className=\"recruiter-nav-sidebar-search-box\">\r\n                <h1>RECRUITER PANEL</h1>\r\n                {/* <input type=\"text\" placeholder=\"Search...\"/> */}\r\n                {/* <i className='bx bx-search' ></i> */}\r\n            </div>\r\n            <div className=\"recruiter-nav-sidebar-profile-details\">\r\n                <img src={Profile}/>\r\n                <span className=\"recruiter-nav-sidebar-recruiter_name\">Khawar Ayub</span>\r\n                <i className='bx bx-chevron-down' ></i>\r\n            </div>\r\n            </nav>\r\n        </section>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport \"./updateProfile.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logout } from \"../../action\";\r\nimport NavSidebar from \"../dashboard/nav-sidebar/NavSidebar\";\r\n\r\nexport default function UpdateProfile() {\r\n  const [error, seterror] = useState();\r\n  const [message, setmessage] = useState();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const onSubmit = async (data) => {\r\n    seterror(null);\r\n    if (data.password !== data.confirmPassword) {\r\n      seterror(\"Password and Confirm Password does not match\");\r\n    } else {\r\n      await axios\r\n        .patch(`http://localhost:5000/recruiter/updateRecruiter`, data, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          withCredentials: true,\r\n        })\r\n        .then((res) => {\r\n          if (res.status === 201) {\r\n            setmessage(res.data.message);\r\n            dispatch(logout());\r\n            navigate(\"/signin\");\r\n          } else {\r\n            seterror(res.data.message);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          seterror(err.response.data.message);\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"recruiter-update-profile\">\r\n      <NavSidebar/>\r\n      <div className=\"recruiter-update-profile-container\">\r\n        <div className=\"recruiter-update-profile-form\">\r\n          <h1>Update Profile</h1>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"error-messages\">{error}</div>\r\n            <label className=\"form-label\">\r\n              Email<span>* </span>\r\n            </label>\r\n            <span className=\"error-messages\">\r\n              {errors.email && errors.email.type === \"required\" && (\r\n                <span>This field is required</span>\r\n              )}\r\n              {errors.email && errors.email.type === \"pattern\" && (\r\n                <span>Enter a valid email</span>\r\n              )}\r\n            </span>\r\n            <input\r\n              id=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              {...register(\"email\", { required: true, pattern: /^\\S+@\\S+$/i })}\r\n            />\r\n            <label className=\"form-label\">\r\n              Password<span>* </span>\r\n            </label>\r\n            <span className=\"error-messages\">\r\n              {errors.password && errors.password.type === \"required\" && (\r\n                <span>This field is required</span>\r\n              )}\r\n              {errors.password && errors.password.type === \"minLength\" && (\r\n                <span>\r\n                  Password is too short, minimum 8 characters required{\" \"}\r\n                </span>\r\n              )}\r\n            </span>\r\n            <input\r\n              id=\"password\"\r\n              type={\"password\"}\r\n              placeholder=\"Enter new password\"\r\n              {...register(\"password\", { required: true, minLength: 8 })}\r\n            />\r\n            <label className=\"form-label\">\r\n              Confirm Password<span>* </span>\r\n            </label>\r\n            <span className=\"error-messages\">\r\n              {errors.confirmPassword &&\r\n                errors.confirmPassword.type === \"required\" && (\r\n                  <span>This field is required</span>\r\n                )}\r\n              {errors.confirmPassword &&\r\n                errors.confirmPassword.type === \"minLength\" && (\r\n                  <span>\r\n                    Password is too short, minimum 8 characters required{\" \"}\r\n                  </span>\r\n                )}\r\n            </span>\r\n            <input\r\n              id=\"confirmPassword\"\r\n              type={\"password\"}\r\n              placeholder=\"Re-enter password\"\r\n              {...register(\"confirmPassword\", { required: true, minLength: 8 })}\r\n            />\r\n            <label className=\"form-label\">\r\n              Company Name<span>* </span>\r\n            </label>\r\n            <span className=\"error-messages\">\r\n              {errors.companyName && errors.companyName.type === \"required\" && (\r\n                <span>This field is required</span>\r\n              )}\r\n            </span>\r\n            <input\r\n              id=\"companyName\"\r\n              placeholder=\"Enter your company name\"\r\n              {...register(\"companyName\", { required: true})}\r\n            />\r\n\r\n            <label className=\"form-label\">\r\n              Company Description<span>* </span>\r\n            </label>\r\n            <span className=\"error-messages\">\r\n              {errors.companyDescription && errors.companyDescription.type === \"required\" && (\r\n                <span>This field is required</span>\r\n              )}\r\n            </span>\r\n            <input\r\n              id=\"companyDescription\"\r\n              placeholder=\"Enter your company Description\"\r\n              {...register(\"companyDescription\", { required: true})}\r\n            />\r\n\r\n            <label className=\"form-label\">\r\n              Total Employees<span>* </span>\r\n            </label>\r\n            <span className=\"error-messages\">\r\n              {errors.totalEmployees && errors.totalEmployees.type === \"required\" && (\r\n                <span>This field is required</span>\r\n              )}\r\n            </span>\r\n            <input\r\n              id=\"totalEmployees\"\r\n              type=\"number\"\r\n              placeholder=\"Enter total number of employees\"\r\n              {...register(\"totalEmployees\", { required: true})}\r\n            />  \r\n\r\n            <label className=\"form-label\">\r\n              Company Creation Date<span>* </span>\r\n            </label>\r\n            <span className=\"error-messages\">\r\n              {errors.founded && errors.founded.type === \"required\" && (\r\n                <span>This field is required</span>\r\n              )}\r\n            </span>\r\n            <input\r\n              id=\"founded\"\r\n              type=\"date\"\r\n              placeholder=\"Enter company's creation date\"\r\n              {...register(\"founded\", { required: true})}\r\n            />  \r\n            <input id=\"update-submit\" type=\"submit\" value=\"Update\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { BsCheckCircle } from \"react-icons/bs\";\r\nimport axios from \"axios\";\r\nimport PostJobImage from \"../../../images/postjob.jpg\";\r\nimport \"./job-post-delete-update.css\";\r\nimport Cookies from \"js-cookie\";\r\nimport NavSidebar from \"../nav-sidebar/NavSidebar\";\r\n\r\nexport default function PostJob() {\r\n  var [error, seterror] = useState();\r\n  var [message, setmessage] = useState();\r\n  const [tests, setTests] = useState();\r\n  const navigate = useNavigate();\r\n  const [refresh,setRefresh] = useState(false);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  // GET ALL TESTS\r\n  const getAllTests = async () => {\r\n    \r\n      await axios\r\n        .get(`http://13.232.134.204:5000/test/allTests`, {\r\n          headers: {\r\n            \"x-access-token\": Cookies.get(\"accessTokenRecruiter\")\r\n          }})\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            console.log(res.data.data)\r\n            setTests(res.data.data);\r\n          } else {\r\n            seterror(res.data.message);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          seterror(err.response.data.message);\r\n        });\r\n      toggleButtonIsChecked();\r\n  };\r\n  // CREATE JOB\r\n  const onSubmit = async (data) => {\r\n    await axios\r\n        .post(`http://13.232.134.204:5000/job/createJob`, data,{\r\n          headers: {\r\n            \"x-access-token\": Cookies.get(\"accessTokenRecruiter\")\r\n          }})\r\n        .then((res) => {\r\n          if (res.status >= 200 && res.status <= 299) {\r\n            setRefresh(!refresh);\r\n            setmessage(res.data.message);\r\n          } else {\r\n            seterror(res.data.message);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          seterror(err.response.data.message);\r\n        });\r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n    if (message) {\r\n      const timer = setTimeout(() => {\r\n        navigate(\"/jobsnew\");\r\n      }, 4000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [message]);\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  const [isOpenPostJob, setIsOpenPostJob] = useState(true);\r\n\r\n  const togglePopupPostJob = () => {\r\n    setIsOpenPostJob(!isOpenPostJob);\r\n  }\r\n\r\n  const toggleButtonIsChecked = () => {\r\n    setIsChecked(!isChecked);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <NavSidebar/>\r\n    <div className=\"post-job-page\">\r\n    {isOpenPostJob && \r\n        \r\n    <div className=\"post-job\">\r\n      {/* <Header/> */}\r\n      {message && (\r\n        <div className=\"success-message\">\r\n          <div className=\"success-message-container\">\r\n            <div className=\"success-message-top-wrapper\">\r\n            <BsCheckCircle size={80} />\r\n              <div>SUCCESS</div>\r\n            </div>\r\n            <div className=\"success-message-bottom-wrapper\">\r\n            {message}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"post-job-left-container\">\r\n        <div className=\"post-job-left-wrapper\">\r\n          <h1>Post Job</h1>\r\n          <p>Best, brilliant and deserving employees are just one step ahead!</p>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"error-messages\">{error}</div>\r\n            {/*                              WORK FOR QUIZ                */}\r\n            {/*                              WORK FOR QUIZ                */}\r\n            {/*                              WORK FOR QUIZ                */}\r\n            {/*                              WORK FOR QUIZ                */}\r\n          <label className=\"form-label\">\r\n              Take Test<span>? </span>\r\n            </label>\r\n            <input\r\n            style={{marginLeft: '3%'}}\r\n              id=\"postJobTakeTest\"\r\n              type=\"checkbox\"\r\n              onClick={getAllTests}\r\n              {...register(\"postJobTakeTest\")}\r\n            />  \r\n\r\n          {isChecked &&\r\n            <>\r\n            <hr/>\r\n              <label className=\"form-label\" style={{width: '100%'}}>\r\n                Select From Existing Tests<span>*</span>\r\n              </label>\r\n              \r\n              <select id=\"postJobExistingTests\">\r\n                {tests?.map((test,index)=>(\r\n                  <option id=\"postJobExistingTests-options\" key={index} value={test.testName}>{test.testName}</option>\r\n                  ))}\r\n              </select>\r\n              <h3>\r\n                <span>or</span>\r\n              </h3>\r\n                \r\n              <Link\r\n                id=\"jobpost-createtest\"\r\n                type=\"button\"\r\n                // value=\"Create Test\"\r\n                to={'/addtest'}\r\n                {...register(\"createTest\")}\r\n              >  Create Test</Link>\r\n            </>\r\n          }\r\n          {/*                                          QUIZ WORK END                               */}\r\n            <hr/>\r\n            <label className=\"form-label\">\r\n              Job Title<span>* </span>\r\n            </label>\r\n            <span className=\"error-messages\">\r\n              {errors.jobTitle && errors.jobTitle.type === \"required\" && (\r\n                <span>This field is required</span>\r\n              )}\r\n              {errors.jobTitle && errors.jobTitle.type === \"pattern\" && (\r\n                <span>Enter a valid jobTitle</span>\r\n              )}\r\n            </span>\r\n            <input\r\n              id=\"jobTitle\"\r\n              placeholder=\"Enter Job Title\"\r\n              {...register(\"jobTitle\", { required: true})}\r\n            />\r\n            <label className=\"form-label\">\r\n              Job Description<span>* </span>\r\n            </label>\r\n            <span className=\"error-messages\">\r\n              {errors.jobDescription && errors.jobDescription.type === \"required\" && (\r\n                <span>This field is required</span>\r\n              )}\r\n              {errors.jobDescription && errors.jobDescription.type === \"minLength\" && (\r\n                <span>\r\n                  jobDescription is too short, minimum 10 words required{\" \"}\r\n                </span>\r\n              )}\r\n            </span>\r\n            <textarea\r\n              id=\"jobDescription\"\r\n              placeholder=\"Enter Job Description\"\r\n              {...register(\"jobDescription\", { required: true, minLength: 60 })}\r\n            />\r\n            <label className=\"form-label\">\r\n              Job Location<span>* </span>\r\n            </label>\r\n            <span className=\"error-messages\">\r\n              {errors.jobLocation &&\r\n                errors.jobLocation.type === \"required\" && (\r\n                  <span>This field is required</span>\r\n                )}\r\n            </span>\r\n            <input\r\n              id=\"jobLocation\"\r\n              placeholder=\"Enter Job Location\"\r\n              {...register(\"jobLocation\", { required: true})}\r\n            />\r\n            \r\n            <label className=\"form-label\">\r\n              Experience Required<span>* </span>\r\n            </label>\r\n            <span className=\"error-messages\">\r\n              {errors.experienceRequired && errors.experienceRequired.type === \"required\" && (\r\n                <span>This field is required</span>\r\n              )}\r\n            </span>\r\n            <input\r\n              id=\"experienceRequired\"\r\n              placeholder=\"Enter the Required Experience\"\r\n              {...register(\"experienceRequired\", { required: true})}\r\n            />\r\n\r\n            <label className=\"form-label\">\r\n              Work Level<span>* </span>\r\n            </label>\r\n            <span className=\"error-messages\">\r\n              {errors.workLevel && errors.workLevel.type === \"required\" && (\r\n                <span>This field is required</span>\r\n              )}\r\n            </span>\r\n            <input\r\n              id=\"workLevel\"\r\n              placeholder=\"Enter Work Level\"\r\n              {...register(\"workLevel\", { required: true})}\r\n            />\r\n\r\n            <label className=\"form-label\">\r\n              Employment Type<span>* </span>\r\n            </label>\r\n            <span className=\"error-messages\">\r\n              {errors.employmentType && errors.employmentType.type === \"required\" && (\r\n                <span>This field is required</span>\r\n              )}\r\n            </span>\r\n            <input\r\n              id=\"employmentType\"\r\n              placeholder=\"Enter the Employment Type\"\r\n              {...register(\"employmentType\", { required: true})}\r\n            />  \r\n            <input id=\"postjob-submit\" className=\"recruiter-postjob-close-icon\"  type=\"submit\" value=\"Post Job\" />\r\n          </form>\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"post-job-right-container\">\r\n        <div className=\"post-job-right-wrapper\">\r\n          <img src={PostJobImage} alt=\"postjob\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n}\r\n</div>\r\n</>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { BsCheckCircle } from \"react-icons/bs\";\r\nimport axios from \"axios\";\r\nimport UpdateJobImage from \"../../../images/postjob.jpg\";\r\nimport \"./job-post-delete-update.css\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport default function UpdateJob({jobTitle,jobDescription,jobLocation,experienceRequired,workLevel,employmentType,id}) {\r\n  \r\n  var [error, seterror] = useState();\r\n  var [message, setmessage] = useState();\r\n  const navigate = useNavigate();\r\n  const [refresh,setRefresh] = useState(false);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  \r\n  const onSubmit = async (data) => {\r\n      await axios\r\n        .put(`http://13.232.134.204:5000/job/updateJob/${id}`, data, {\r\n          headers: {\r\n            \"x-access-token\": Cookies.get(\"accessTokenRecruiter\")\r\n          }})\r\n        .then((res) => {\r\n          if (res.status >= 200 && res.status <= 299) {\r\n            setRefresh(!refresh);\r\n            setmessage(res.data.message);\r\n          } else {\r\n            seterror(res.data.message);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          seterror(err.response.data.message);\r\n        });\r\n  };\r\n\r\n  return (\r\n    <div className=\"update-job\">\r\n      {/* <Header/> */}\r\n      {message && (\r\n        <div className=\"success-message\">\r\n          <div className=\"success-message-container\">\r\n            <div className=\"success-message-top-wrapper\">\r\n            <BsCheckCircle size={80} />\r\n              <div>SUCCESS</div>\r\n            </div>\r\n            <div className=\"success-message-bottom-wrapper\">\r\n            {message}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"update-job-left-container\">\r\n        <div className=\"update-job-left-wrapper\">\r\n          <h1>Update A Job</h1>\r\n          <p>Best, brilliant and deserving employees are just one step ahead!</p>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"error-messages\">{error}</div>\r\n            <label className=\"form-label\">\r\n              Job Title<span>* </span>\r\n            </label>\r\n            <span className=\"error-messages\">\r\n              {errors.jobTitle && errors.jobTitle.type === \"required\" && (\r\n                <span>This field is required</span>\r\n              )}\r\n              {errors.jobTitle && errors.jobTitle.type === \"pattern\" && (\r\n                <span>Enter a valid jobTitle</span>\r\n              )}\r\n            </span>\r\n            <input\r\n              id=\"jobTitle\"\r\n              placeholder=\"Enter Job Title\"\r\n              // value={jobTitle}\r\n              {...register(\"jobTitle\")}\r\n            />\r\n            <label className=\"form-label\">\r\n              Job Description<span>* </span>\r\n            </label>\r\n            <span className=\"error-messages\">\r\n              {errors.jobDescription && errors.jobDescription.type === \"required\" && (\r\n                <span>This field is required</span>\r\n              )}\r\n              {errors.jobDescription && errors.jobDescription.type === \"minLength\" && (\r\n                <span>\r\n                  jobDescription is too short, minimum 10 words required{\" \"}\r\n                </span>\r\n              )}\r\n            </span>\r\n            <input\r\n              id=\"jobDescription\"\r\n              placeholder=\"Enter Job Description\"\r\n              // value={jobDescription}\r\n              {...register(\"jobDescription\", { minLength: 60 })}\r\n            />\r\n            <label className=\"form-label\">\r\n              Job Location<span>* </span>\r\n            </label>\r\n            <span className=\"error-messages\">\r\n              {errors.jobLocation &&\r\n                errors.jobLocation.type === \"required\" && (\r\n                  <span>This field is required</span>\r\n                )}\r\n            </span>\r\n            <input\r\n              id=\"jobLocation\"\r\n              placeholder=\"Enter Job Location\"\r\n              // value={jobLocation}\r\n              {...register(\"jobLocation\")}\r\n            />\r\n            \r\n            <label className=\"form-label\">\r\n              Experience Required<span>* </span>\r\n            </label>\r\n            <span className=\"error-messages\">\r\n              {errors.experienceRequired && errors.experienceRequired.type === \"required\" && (\r\n                <span>This field is required</span>\r\n              )}\r\n            </span>\r\n            <input\r\n              id=\"experienceRequired\"\r\n              placeholder=\"Enter the Required Experience\"\r\n              // value={experienceRequired}\r\n              {...register(\"experienceRequired\")}\r\n            />\r\n\r\n            <label className=\"form-label\">\r\n              Work Level<span>* </span>\r\n            </label>\r\n            <span className=\"error-messages\">\r\n              {errors.workLevel && errors.workLevel.type === \"required\" && (\r\n                <span>This field is required</span>\r\n              )}\r\n            </span>\r\n            <input\r\n              id=\"workLevel\"\r\n              placeholder=\"Enter Work Level\"\r\n              // value={workLevel}\r\n              {...register(\"workLevel\")}\r\n            />\r\n\r\n            <label className=\"form-label\">\r\n              Employment Type<span>* </span>\r\n            </label>\r\n            <span className=\"error-messages\">\r\n              {errors.employmentType && errors.employmentType.type === \"required\" && (\r\n                <span>This field is required</span>\r\n              )}\r\n            </span>\r\n            <input\r\n              id=\"employmentType\"\r\n              placeholder=\"Enter the Employment Type\"\r\n              // value={employmentType}\r\n              {...register(\"employmentType\")}\r\n            />  \r\n\r\n            <input id=\"updatejob-submit\" type=\"submit\" value=\"Update Job\" />\r\n          </form>\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"update-job-right-container\">\r\n        <div className=\"update-job-right-wrapper\">\r\n          <img src={UpdateJobImage} alt=\"Update Job\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function JobItem(props) {\r\n \r\n    return (\r\n        <div className=\"container-sm\" style={{width: \"75%\"}}>\r\n          <div className=\"my-3\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h3 className=\"card-title\" style={{color: \"#2c6f8b\"}}>\r\n                    {props.jobTitle}\r\n                </h3>\r\n                <h3>\r\n                  <span className=\"position-absolute top-0 translate-middle badge rounded-pill bg-success\" style={{left: '90%', zIndex: '1'}}>\r\n                    {props.jobLocation}\r\n                  </span>\r\n                </h3>\r\n                <p className=\"card-text\">{props.jobDescription}...</p>\r\n                <p className=\"card-text\">\r\n                  <small className=\"text-muted\" >\r\n                    <h6>Experience Required:</h6><p className='my-sm'>{props.experienceRequired}</p>\r\n                    <h6>Work Level:</h6><p className='my-sm'>{props.workLevel}</p>\r\n                    <h6>Employment Type:</h6><p className='my-sm'>{props.employeementType}</p>\r\n                  </small>\r\n                  <small className=\"text-muted \" style={{display: \"flex\", fontStyle: 'italic', fontWeight: \"bold\"}}>\r\n                    Created At{\" \"}{props.createdAt}\r\n                  </small>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Header from \"../../header/Header\";\r\nimport JobItem from \"../jobsNew/JobItem\";\r\nimport \"./jobs.css\";\r\n\r\nexport default function Jobs() {\r\n  const [error, seterror] = useState();\r\n  const [jobs, setJobs] = useState([]);\r\n  const [jobDetails, setJobDetails] = useState([]);\r\n  const getAllJobs = async () => {\r\n    const response = await axios\r\n      .get(`http://localhost:5000/job/viewRecruiterJobs`)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setJobs(res.data);\r\n          handleJobClick(res.data[0]);\r\n          console.log(res.data);\r\n        } else {\r\n          seterror(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        seterror(err.response.data.message);\r\n      });\r\n  };\r\n  const handleJobClick = (job) => {\r\n    setJobDetails(job);\r\n  };\r\n  useEffect(() => {\r\n    getAllJobs();\r\n  }, []);\r\n  \r\n  return (\r\n    <>\r\n      {/* <Header whiteColor={true}/> */}\r\n      <div className=\"jobs\">\r\n        <div className=\"jobs-container\">\r\n          <div className=\"jobs-search-bar\">\r\n            <div className=\"jobs-search-bar-container\">\r\n              <div className=\"search-by-job\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"job-search\"\r\n                  placeholder=\"Job Title, Skills or Company\"\r\n                />\r\n              </div>\r\n              <div className=\"search-by-location\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"location-search\"\r\n                  placeholder=\"City, State or Zip Code\"\r\n                />\r\n              </div>\r\n              <button>Search</button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"jobs-list\">\r\n            <div className=\"jobs-list-container\">\r\n              <div className=\"jobs-list-left\">\r\n                {jobs.map((job,index) => (\r\n                  <div key={index} onClick={()=>handleJobClick(job)}>\r\n                    <JobItem \r\n                      jobTitle={job.jobTitle}\r\n                      jobDescription={job.jobDescription} \r\n                      jobLocation={job.jobLocation} \r\n                      experienceRequired={job.experienceRequired} \r\n                      workLevel={job.workLevel} \r\n                      employmentType={job.employmentType}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"jobs-list-right\">\r\n                  <JobItem/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useEffect } from 'react';\r\n\r\nexport default function DeleteJob() {\r\n    const [job, setJob] = useState([]);\r\n    useEffect(()=>{\r\n        getJobs();\r\n    },[])\r\n    function getJobs ()\r\n    {\r\n        // fetch(`http://localhost:5000/job/viewRecruiterJobs`),{\r\n        //     method: 'GET'\r\n        // }.then((result)=>{\r\n        //     result.json.then((resp)=>{\r\n        //         console.log(resp)\r\n        //     })\r\n        // })\r\n    }\r\n    function deleteJob(id)\r\n    {\r\n        // fetch(`http://localhost:5000/job/deleteJob/${id}`),{\r\n        //     method: 'DELETE'\r\n        // }.then((result)=>{\r\n        //     result.json.then((resp)=>{\r\n        //         console.warn(resp)\r\n        //     })\r\n        // })\r\n        alert(id);\r\n        getJobs();\r\n    }\r\n  return (\r\n    <>\r\n        {job.map((item,index)=>\r\n            <button key={index} onClick={()=>deleteJob(item.jobId)}>Delete</button>\r\n            )\r\n        }\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Wait() {\r\n  return (\r\n    <div className=\"container\" style={{textAlign: 'center', fontFamily: 'sans-serif', paddingTop: '15%',color: '#042743'}}>\r\n        <h1 style={{fontSize: '7vh', lineHeight: '1.5'}}>You Have Successfully Signed Up !<br/>Wait Until Your Account Has Been Verfied ! <br/> We'll Get Back To You Soon. </h1>\r\n        </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nexport default function QuestionItem(props) {\r\n    return (\r\n        <div className=\"container-sm\" style={{width: \"75%\"}}>\r\n      <div className=\"my-3\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h3 className=\"card-title\" style={{color: \"#2c6f8b\"}}>\r\n              {props.question}\r\n            </h3>\r\n            <ol>\r\n            {props.options.map((item, index)=>(\r\n            <li key={index} className=\"card-text text-muted\">  {item.option}</li>\r\n            ))}\r\n            </ol>\r\n           \r\n            <p style={{fontStyle: 'italic'}}>Category: {props.category}</p>\r\n            <p style={{color: 'chocolate'}}>Difficulty Level: {props.difficultyLevel}</p>\r\n           \r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { BsCheckCircle } from \"react-icons/bs\";\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport './addquestion.css';\r\n\r\nexport default function AddQuestion() {\r\n  const [answers, setAnswers] = useState([]);\r\n  var [error, seterror] = useState();\r\n  var [message, setmessage] = useState(); \r\n  const [refresh,setRefresh] = useState(false);\r\n  const navigate = useNavigate();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  // CREATE QUESTION\r\n  const onSubmit = async (data) => {\r\n    await axios\r\n        .post(`http://13.232.134.204:5000/questions/createQuestion`, data,{\r\n          headers: {\r\n            \"x-access-token\": Cookies.get(\"accessTokenRecruiter\")\r\n          }}, data)\r\n        .then((res) => {\r\n          if (res.status >= 200 && res.status <= 299) {\r\n            setRefresh(!refresh);\r\n            setmessage(res.data.message);\r\n          } else {\r\n            seterror(res.data.message);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          seterror(err.response.data.message);\r\n        });\r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n    if (message) {\r\n      const timer = setTimeout(() => {\r\n        navigate(\"/jobsnew\");\r\n      }, 4000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [message]);\r\n  const [optionList, setOptionList] = useState([{option: ''}]);\r\n  const handleOptionAdd = () =>\r\n  {\r\n    setOptionList([...optionList,{option: ''}])\r\n  }\r\n  const handleOptionRemove = (index) =>\r\n  {\r\n    const list= [...optionList]\r\n    list.splice(index, 1);\r\n    setOptionList(list);\r\n  }\r\n  const handleOptionChange = (e, index) =>\r\n  {\r\n    // console.log(e.target.value);\r\n    const {name, value} = e.target\r\n    const list= [...optionList]\r\n    list[index][name] = value\r\n    setOptionList(list);\r\n    console.log(list);\r\n  }\r\n  const style = \r\n  {\r\n    borderRadius: '4px',\r\n    backgroundColor: '#04AA6D',\r\n    color: 'white',\r\n    paddingTop: '.5%',\r\n    paddingRight: '83%',\r\n    paddingLeft: '1%'\r\n  }\r\n  const style2 = {\r\n    borderRadius: '4px',\r\n    backgroundColor: '#04AA6D',\r\n    color: 'white',\r\n    paddingTop: '.5%',\r\n    paddingRight: '80%',\r\n    paddingLeft: '1%'\r\n  }\r\n  const style3 = {\r\n    borderRadius: '4px',\r\n    backgroundColor: '#04AA6D',\r\n    color: 'white',\r\n    paddingTop: '.5%',\r\n    paddingLeft: '1%',\r\n    paddingBottom: '.5%'\r\n  }\r\n  const inputStyle = {\r\n    backgroundColor: '#F9F9F9'\r\n  }\r\n  const optionButtonStyle = {\r\n    marginTop: '3%',\r\n    padding: '1% 45% 1% 40%',\r\n    float: 'center',\r\n    backgroundColor: '#4285F4',\r\n    color: 'white'\r\n  }\r\n  return (\r\n    <>\r\n    {message && (\r\n        <div className=\"success-message\">\r\n          <div className=\"success-message-container\">\r\n            <div className=\"success-message-top-wrapper\">\r\n            <BsCheckCircle size={80} />\r\n              <div>SUCCESS</div>\r\n            </div>\r\n            <div className=\"success-message-bottom-wrapper\">\r\n            {message}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    <h1 style={{margin: '0% 0% 0% 14%', color:'#2c6f8b',fontWeight: 'bold' }}>Add Question*</h1>\r\n    <div className='container' style={{width: '75%', marginTop: '8%'}}>\r\n        <form onSubmit={handleSubmit(onSubmit)} style={{border: '1px solid lightgray',padding: '1%'}}>\r\n            <div className=\"mb-3\">\r\n                <label style={style2} htmlFor=\"question\" className=\"form-label\"><h4>Question*</h4></label>\r\n                <input style={inputStyle} type=\"text\" className=\"form-control\" placeholder='Enter the Ouestion' id=\"question\" required/>\r\n            </div>\r\n            \r\n            <label style={style} htmlFor=\"options\" className=\"form-label\"><h4 >Options*</h4></label>\r\n              {optionList.map((singleOption, index) =>(\r\n                <div  key={index} className=\"mb-3 answers\">\r\n                    <input \r\n                      style={{backgroundColor: '#F9F9F9',float: 'left', width: '59%',marginTop: '1%'}}\r\n                      type=\"text\" \r\n                      className=\"form-control\" \r\n                      name='options' \r\n                      placeholder='Enter the Options' \r\n                      id=\"options\"\r\n                      // value={singleOption.option}\r\n                      onBlur = {(e) => handleOptionChange(e, index)}\r\n                      required\r\n                    />\r\n                    <input \r\n                      style={{marginLeft: '10px'}} \r\n                      type=\"radio\" \r\n                      id=\"radio-options\" \r\n                      name=\"radio-options\"\r\n                    />\r\n                    <label \r\n                      style={{marginTop: '2%', color: 'grey'}}\r\n                      className=\"form-label\" \r\n                      htmlFor=\"radio-options\"\r\n                      >\r\n                        True Answer\r\n                    </label>\r\n                    {optionList.length >1 && (\r\n                      <button \r\n                        onClick={() => handleOptionRemove(index)}\r\n                        style={{float: 'right',marginTop: '1%'}}  \r\n                        className=\"mx-3 btn btn-danger\"\r\n                        >\r\n                          Remove\r\n                        </button>\r\n                    )}\r\n                    {/* ADD BUTTON */}\r\n                    {optionList.length -1 === index && \r\n                      optionList.length < 10 &&\r\n                      <button \r\n                        onClick={handleOptionAdd} \r\n                        style={optionButtonStyle} \r\n                        className=\"btn\"\r\n                        >\r\n                          Add Option\r\n                        </button>\r\n                    }  \r\n                </div>\r\n              ))}\r\n              \r\n                \r\n                \r\n            <div className=\"mb-3\">\r\n                <label style={style2} htmlFor=\"category\" className=\"form-label\"><h4>Category*</h4></label>\r\n                <input type=\"text\" className=\"form-control\" placeholder='Enter the Category' id=\"category\" />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n            <h4 style={style3}>Difficulty Level*</h4>\r\n                <input type=\"radio\" id=\"hard\" name=\"difficultyLevel\" value=\"hard\"/>\r\n                <label className=\"form-label\" htmlFor=\"hard\">Hard</label>\r\n                <input type=\"radio\" id=\"medium\" name=\"difficultyLevel\" value=\"medium\"/>\r\n                <label className=\"form-label\" htmlFor=\"medium\">Medium</label>\r\n                <input type=\"radio\" id=\"easy\" name=\"difficultyLevel\" value=\"easy\"/>\r\n                 <label className=\"form-label\" htmlFor=\"easy\">Easy</label>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Add</button>\r\n        </form>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nexport default function UpdateQuestion({question,answer,category,difficultyLevel,id}) {\r\n  var [error, seterror] = useState();\r\n  var [message, setmessage] = useState();\r\n  const navigate = useNavigate();\r\n  const [refresh,setRefresh] = useState(false);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = async (data) => {\r\n      await axios\r\n        .put(`http://13.232.134.204:5000/questions/updateQuestion/${id}`, {\r\n          headers: {\r\n            \"x-access-token\": Cookies.get(\"accessTokenRecruiter\")\r\n          }}, data)\r\n        .then((res) => {\r\n          if (res.status >= 200 && res.status <= 299) {\r\n            setRefresh(!refresh);\r\n            setmessage(res.data.message);\r\n          } else {\r\n            seterror(res.data.message);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          seterror(err.response.data.message);\r\n        });\r\n  };\r\n  useEffect(() => {\r\n    onSubmit();\r\n  }, [refresh]);\r\n\r\n  // OPTION ADD\r\n  const [answerList, setanserList] = useState([{answer: ''}]);\r\n  const [diffLevel, setDiffLevel] = useState(false);\r\n\r\n  const setDifficultyLevel = ()=>{\r\n    setDiffLevel(diffLevel);\r\n  }\r\n  const handleAnswerAdd = () =>\r\n  {\r\n    setanserList([...answerList,{answer: ''}])\r\n  }\r\n  const handleAnswerRemove = (index) =>\r\n  {\r\n    const list= [...answerList]\r\n    list.splice(index, 1);\r\n    setanserList(list);\r\n  }\r\n  const handleAnswerChange = (e, index) =>\r\n  {\r\n    const {name, value} = e.target\r\n    const list= [...answerList]\r\n    list[index][name] = value\r\n    setanserList(list);\r\n  }\r\n  const optionButtonStyle = {\r\n    marginTop: '3%',\r\n    padding: '1% 45% 1% 40%',\r\n    float: 'center',\r\n    backgroundColor: '#4285F4',\r\n    color: 'white'\r\n  }\r\n  return (\r\n    <>\r\n      <h1 style={{margin: '0% 0% 5% 14%', color:'#2c6f8b',fontWeight: 'bold' }}>Update Question*</h1>\r\n      <div className='container' style={{width: '75%', marginTop: '8%'}}>\r\n      <form style={{border: '1px solid lightgray',padding: '1%'}} onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"mb-3\">\r\n              <label style={{marginRight: '24%'}} htmlFor=\"question\" className=\"form-label\"><h4>Question*</h4></label>\r\n              <input style={{backgroundColor: '#F9F9F9'}} type=\"text\" className=\"form-control\" placeholder='Enter the Ouestion' value={question} id=\"question\" />\r\n          </div>\r\n          \r\n          <label htmlFor=\"answer\" className=\"form-label\"><h4 >Options*</h4></label>\r\n            {answerList.map((singleAnswer, index) =>(\r\n              <div  key={index} className=\"mb-3 answers\">\r\n                  <input \r\n                    style={{backgroundColor: '#F9F9F9',float: 'left', width: '59%',marginTop: '1%'}} \r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    name='answer' \r\n                    placeholder='Enter the Options' \r\n                    // value={answer}\r\n                    id=\"answer\"\r\n                    value={singleAnswer.answer}\r\n                    onChange = {(e) => handleAnswerChange(e, index)}\r\n                  />\r\n                  <input \r\n                    style={{marginLeft: '10px'}} \r\n                    type=\"radio\" \r\n                    value={true}\r\n                    id=\"options\" \r\n                    name=\"options\"\r\n                  />\r\n                  <label \r\n                    style={{marginTop: '2%', color: 'grey'}} \r\n                    className=\"form-label\" \r\n                    htmlFor=\"options\"\r\n                    >\r\n                      True Answer\r\n                  </label>\r\n                  {answerList.length >1 && (\r\n                    <button \r\n                      onClick={() => handleAnswerRemove(index)}\r\n                      style={{float: 'right',marginTop: '1%'}} \r\n                      className=\"mx-3 btn btn-danger\"\r\n                      >\r\n                        Remove\r\n                      </button>\r\n                  )}\r\n                  {/* ADD BUTTON */}\r\n                  {answerList.length -1 === index && \r\n                    answerList.length < 10 &&\r\n                    <button \r\n                      onClick={handleAnswerAdd} \r\n                      style={optionButtonStyle} \r\n                      className=\"btn\"\r\n                      >\r\n                        Add Option\r\n                      </button>\r\n                  }  \r\n              </div>\r\n            ))}\r\n            \r\n              \r\n              \r\n          <div className=\"mb-3\">\r\n              <label htmlFor=\"category\" className=\"form-label\"><h4>Category*</h4></label>\r\n              <input style={{backgroundColor: '#F9F9F9'}} type=\"text\" className=\"form-control\" value={category} placeholder='Enter the Category' id=\"category\" />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n          <h4>Difficulty Level*</h4>\r\n          {diffLevel.map((oneDifficulty, index) =>(\r\n            <div key={index}>\r\n              <input type=\"radio\" id=\"hard\" onClick={()=>setDifficultyLevel(oneDifficulty)} name=\"difficultyLevel\" value=\"hard\"/>\r\n              <label style={{color: 'grey'}} className=\"form-label\" htmlFor=\"hard\">Hard</label>\r\n              <input type=\"radio\" id=\"medium\" onClick={()=>setDifficultyLevel(oneDifficulty)} name=\"difficultyLevel\" value=\"medium\"/>\r\n              <label style={{color: 'grey'}} className=\"form-label\" htmlFor=\"medium\">Medium</label>\r\n              <input type=\"radio\" id=\"easy\" onClick={()=>setDifficultyLevel(oneDifficulty)} name=\"difficultyLevel\" value=\"easy\"/>\r\n               <label style={{color: 'grey'}} className=\"form-label\" htmlFor=\"easy\">Easy</label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n          <button type=\"submit\" className=\"btn btn-dark\" >Add</button>\r\n      </form>\r\n  </div>\r\n</>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useEffect } from 'react';\r\n\r\nexport default function DeleteQuestion() {\r\n    const [job, setJob] = useState([]);\r\n    useEffect(()=>{\r\n        getJobs();\r\n    },[])\r\n    function getJobs ()\r\n    {\r\n        // fetch(`http://localhost:5000/questionpool/viewRecruiterQuestions`),{\r\n        //     method: 'GET'\r\n        // }.then((result)=>{\r\n        //     result.json.then((resp)=>{\r\n        //         console.log(resp)\r\n        //     })\r\n        // })\r\n    }\r\n    function deleteQuestion(id)\r\n    {\r\n        // fetch(`http://localhost:5000/questionpool/deleteQuestion/${id}`),{\r\n        //     method: 'DELETE'\r\n        // }.then((result)=>{\r\n        //     result.json.then((resp)=>{\r\n        //         console.warn(resp)\r\n        //     })\r\n        // })\r\n        alert(id);\r\n        getJobs();\r\n    }\r\n  return (\r\n    <>\r\n        {job.map((item,index)=>\r\n            <button key={index} onClick={()=>deleteQuestion(item.questionId)}>Delete</button>\r\n            )\r\n        }\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\nimport QuestionItem from \"./QuestionItem\";\r\nimport  './questionpool.css';\r\nimport NavSidebar from \"../nav-sidebar/NavSidebar\";\r\nimport UpdateQuestion from \"./UpdateQuestion\";\r\nimport AddQuestion from \"./AddQuestion\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport default function QuestionPool() {\r\n  const [selectedQuestion, setSelectedQuestion] = useState();\r\n  const [error, seterror] = useState();\r\n  const [refresh,setRefresh] = useState(false);\r\n  const [questions, setQuestions] = useState([]);\r\n  // POPUP\r\n  const [isOpenAddQuestion, setIsOpenAddQuestion] = useState(false);\r\n  const [isOpenView, setIsOpenView] = useState(false);\r\n  const [isOpenUpdate, setIsOpenUpdate] = useState(false);\r\n  const [isOpenDelete, setIsOpenDelete] = useState(false);\r\n\r\n  const togglePopupAddQuestion = () => {\r\n    setIsOpenAddQuestion(!isOpenAddQuestion);\r\n  }\r\n  const togglePopupView = () => {\r\n    setIsOpenView(!isOpenView);\r\n  }\r\n  const togglePopupUpdate = () => {\r\n    setIsOpenUpdate(!isOpenUpdate);\r\n  }\r\n\r\n   // VIEW QUESTION\r\n   const viewQuestion =(element)=>{\r\n    setSelectedQuestion(element);\r\n    togglePopupView();\r\n  }\r\n  //  UPDATE QUESTION\r\n  const updateQuestion =(element)=>{\r\n    setSelectedQuestion(element);\r\n    togglePopupUpdate();\r\n  }\r\n    //  GET AL QUESTIONS\r\n  const getAllQuestions = async () => {\r\n    \r\n    // console.log(\"Moiz Khan\");\r\n        await axios\r\n      .get(`http://13.232.134.204:5000/questions/viewMyQuestions`,{\r\n        headers: {\r\n          \"x-access-token\": Cookies.get(\"accessTokenRecruiter\")\r\n        }})\r\n      .then((res) => {\r\n        if (res.status >= 200 && res.status <= 299) {\r\n          setQuestions(res.data.data);\r\n          console.log(res.data);\r\n        } else {\r\n          seterror(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // seterror(err.response.data.message);\r\n        console.log(err);\r\n      });\r\n      console.log(\"Khawar Khan\");\r\n  };\r\n \r\n    /// DELETE QUESTION\r\n  \r\n    const deleteQuestion = async (id) =>\r\n    {\r\n      const response = await axios\r\n      .delete(`http://13.232.134.204:5000/questions/deleteQuestion/${id}`,{\r\n        headers: {\r\n          \"x-access-token\": Cookies.get(\"accessTokenRecruiter\")\r\n        }})\r\n      .then((res) => {\r\n        if (res.status >= 200 && res.status <= 299) {\r\n          setRefresh(!refresh);\r\n        } else {\r\n          seterror(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        seterror(err.response.data.message);\r\n      });\r\n    }\r\n    useEffect(() => {\r\n      getAllQuestions();\r\n    }, [refresh]);\r\n     \r\n  // POPUP\r\n \r\n  const styleAddQuestion ={\r\n    fontFamily:'sans-serif',\r\n    borderRadius: '4px',\r\n    border: 'none',\r\n    textAlign: 'center',\r\n    padding: '1% 3% 1% 3%',\r\n    fontSize: '17px',\r\n    textDecoration: 'none',\r\n    color: 'white',\r\n    backgroundColor: '#91B7E1',\r\n    float: 'right',\r\n    marginTop: '3%'\r\n  }\r\n    \r\n    return (\r\n      <>\r\n        <NavSidebar/>\r\n        <div className='container questionpool-container'>\r\n          <h1>Question</h1>\r\n          <button style={styleAddQuestion} onClick={togglePopupAddQuestion} className=\"btn\">Add Question</button>\r\n          <div>\r\n            {isOpenAddQuestion && \r\n              <div className=\"questionpool-popup-box\">\r\n                <div className=\"questionpool-box\">\r\n                  <span onClick={togglePopupAddQuestion} className=\"questionpool-close-icon\" >x</span>\r\n                  <AddQuestion/>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <table id=\"questionpool-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Question</th>\r\n                <th>Options</th>\r\n                <th>Category</th>\r\n                <th>Difficulty Level</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {questions?.map((element,index)=>{\r\n              \r\n              const trueAnswer = element.questionOptions.filter((e)=>e.isCorrect===true)\r\n              return(\r\n              <tr key={index}>\r\n                <td>{element.question.slice(0, 30)}....</td>\r\n                <td>{trueAnswer.length>0?trueAnswer[0].option:\"No Correct Option\"}</td>\r\n                <td>{element.category}</td>\r\n                <td>{element.difficultyLevel}</td>\r\n                <td>\r\n                  <button onClick={()=>viewQuestion(element)} id=\"one\" className=\"btn-success\">View</button>\r\n                  <button onClick={()=>updateQuestion(element)} style={{margin: '0% 14% 0% 14%'}} className=\"btn-primary\">Update</button>\r\n                  <button onClick={()=>deleteQuestion(element.id)}  className=\"btn-danger\">Delete</button>\r\n                  \r\n                </td>\r\n              </tr>\r\n              )\r\n            })}\r\n            </tbody>\r\n            {/* VIEW */}\r\n            <div>\r\n              {isOpenView && \r\n                <div className=\"questionpool-popup-box\">\r\n                  <div className=\"questionpool-box\">\r\n                    <span className=\"questionpool-close-icon\" onClick={togglePopupView}>x</span>\r\n                    <QuestionItem \r\n                    question = {selectedQuestion.question}\r\n                    options = {selectedQuestion.questionOptions}\r\n                    category = {selectedQuestion.category}\r\n                    difficultyLevel = {selectedQuestion.difficultyLevel}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              }\r\n            </div>\r\n            {/* UPDATE */}\r\n            <div>\r\n              {isOpenUpdate && \r\n                <div className=\"questionpool-popup-box\">\r\n                  <div className=\"questionpool-box\">\r\n                    <span className=\"questionpool-close-icon\" onClick={togglePopupUpdate}>x</span>\r\n                    <UpdateQuestion \r\n                    question = {selectedQuestion.question}\r\n                    options = {selectedQuestion.answer}\r\n                    category = {selectedQuestion.category}\r\n                    difficultyLevel = {selectedQuestion.difficultyLevel}\r\n                    />\r\n                  </div>\r\n              </div>\r\n              }\r\n            </div>\r\n          </table>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n","import React, { useState } from 'react';\r\n// import Header from '../../header/Header';\r\n// import './quiz.css';\r\n\r\nexport default function Quiz() {\r\n\tconst questions = [\r\n\t\t{\r\n\t\t\tquestion: 'What is the capital of France?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answer: 'New York', isCorrect: false },\r\n\t\t\t\t{ answer: 'London', isCorrect: false },\r\n\t\t\t\t{ answer: 'Paris', isCorrect: true },\r\n\t\t\t\t{ answer: 'Dublin', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestion: 'Who is CEO of Tesla?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answer: 'Jeff Bezos', isCorrect: false },\r\n\t\t\t\t{ answer: 'Elon Musk', isCorrect: true },\r\n\t\t\t\t{ answer: 'Bill Gates', isCorrect: false },\r\n\t\t\t\t{ answer: 'Tony Stark', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestion: 'The iPhone was created by which company?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answer: 'Apple', isCorrect: true },\r\n\t\t\t\t{ answer: 'Intel', isCorrect: false },\r\n\t\t\t\t{ answer: 'Amazon', isCorrect: false },\r\n\t\t\t\t{ answer: 'Microsoft', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestion: 'How many Harry Potter books are there?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answer: '1', isCorrect: false },\r\n\t\t\t\t{ answer: '4', isCorrect: false },\r\n\t\t\t\t{ answer: '6', isCorrect: false },\r\n\t\t\t\t{ answer: '7', isCorrect: true },\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n    \r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [showScore, setShowScore] = useState(false);\r\n    const [score, setScore] = useState(0);\r\n    const handleAnswerButtonClick= (isCorrect) => {\r\n        if(isCorrect)\r\n        {\r\n            setScore(score+1);\r\n        }\r\n        const nextQuestion = currentQuestion + 1;\r\n        if(nextQuestion < questions.length)\r\n        {\r\n            setCurrentQuestion(nextQuestion);\r\n        }\r\n        else{\r\n            setShowScore(true);\r\n        }\r\n    }\r\n\treturn (\r\n        <>\r\n        {/* <Header/> */}\r\n\t\t<div className='quiz-app'>\r\n\t\t\t{/* HINT: replace \"false\" with logic to display the \r\n      score when the user has answered all the questions */}\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='quiz-score-section'>You scored {score} out of {questions.length}</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='quiz-question-section'>\r\n\t\t\t\t\t\t<div className='quiz-question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion+1}</span>/{questions.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='quiz-question-text'>{questions[currentQuestion].question}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='quiz-answer-section'>\r\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((item, index)=>(\r\n                            <button onClick={() => handleAnswerButtonClick(item.isCorrect)}>{item.answer}</button>\r\n                        ))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n        </>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport './dashboardrecruiter.css';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport Profile from '../../../images/avatar.jpg';\r\nimport NavSidebar from '../nav-sidebar/NavSidebar';\r\nexport default function DashboardRecruiter() {\r\n  \r\n  return (\r\n  <>\r\n  <NavSidebar/>\r\n  <section className=\"home-section\">\r\n     <div className=\"home-content\">\r\n     <div className=\"overview-boxes\">\r\n        <div className=\"box\">\r\n          <div className=\"right-side\">\r\n            <div className=\"box-topic\">Total Order</div>\r\n            <div className=\"number\">40,876</div>\r\n            <div className=\"indicator\">\r\n              <i className='bx bx-up-arrow-alt'></i>\r\n              <span className=\"text\">Up from yesterday</span>\r\n            </div>\r\n          </div>\r\n          <i className='bx bx-cart-alt cart'></i>\r\n        </div>\r\n        <div className=\"box\">\r\n          <div className=\"right-side\">\r\n            <div className=\"box-topic\">Total Sales</div>\r\n            <div className=\"number\">38,876</div>\r\n            <div className=\"indicator\">\r\n              <i className='bx bx-up-arrow-alt'></i>\r\n              <span className=\"text\">Up from yesterday</span>\r\n            </div>\r\n          </div>\r\n          <i className='bx bxs-cart-add cart two' ></i>\r\n        </div>\r\n        <div className=\"box\">\r\n          <div className=\"right-side\">\r\n            <div className=\"box-topic\">Total Profit</div>\r\n            <div className=\"number\">$12,876</div>\r\n            <div className=\"indicator\">\r\n              <i className='bx bx-up-arrow-alt'></i>\r\n              <span className=\"text\">Up from yesterday</span>\r\n            </div>\r\n          </div>\r\n          <i className='bx bx-cart cart three' ></i>\r\n        </div>\r\n        <div className=\"box\">\r\n          <div className=\"right-side\">\r\n            <div className=\"box-topic\">Total Return</div>\r\n            <div className=\"number\">11,086</div>\r\n            <div className=\"indicator\">\r\n              <i className='bx bx-down-arrow-alt down'></i>\r\n              <span className=\"text\">Down From Today</span>\r\n            </div>\r\n          </div>\r\n          <i className='bx bxs-cart-download cart four' ></i>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sales-boxes\">\r\n        <div className=\"recent-sales box\">\r\n          <div className=\"title\">Recent Sales</div>\r\n          <div className=\"sales-details\">\r\n              <ul className=\"details\">\r\n                <li className=\"topic\">Date</li>\r\n                <li><Link to=\"#\">02 Jan 2021</Link></li>\r\n                <li><Link to=\"#\">02 Jan 2021</Link></li>\r\n                <li><Link to=\"#\">02 Jan 2021</Link></li>\r\n                <li><Link to=\"#\">02 Jan 2021</Link></li>\r\n                <li><Link to=\"#\">02 Jan 2021</Link></li>\r\n                <li><Link to=\"#\">02 Jan 2021</Link></li>\r\n                <li><Link to=\"#\">02 Jan 2021</Link></li>\r\n                <li><Link to=\"#\">02 Jan 2021</Link></li>\r\n                <li><Link to=\"#\">02 Jan 2021</Link></li>\r\n              </ul>\r\n              <ul className=\"details\">\r\n                <li className=\"topic\">Customer</li>\r\n                <li><Link to=\"#\">Alex Doe</Link></li>\r\n                <li><Link to=\"#\">David Mart</Link></li>\r\n                <li><Link to=\"#\">Roe Parter</Link></li>\r\n                <li><Link to=\"#\">Diana Penty</Link></li>\r\n                <li><Link to=\"#\">Martin Paw</Link></li>\r\n                <li><Link to=\"#\">Doe Alex</Link></li>\r\n                <li><Link to=\"#\">Aiana Lexa</Link></li>\r\n                <li><Link to=\"#\">Rexel Mags</Link></li>\r\n                <li><Link to=\"#\">Tiana Loths</Link></li>\r\n              </ul>\r\n              <ul className=\"details\">\r\n                <li className=\"topic\">Sales</li>\r\n                <li><Link to=\"#\">Delivered</Link></li>\r\n                <li><Link to=\"#\">Pending</Link></li>\r\n                <li><Link to=\"#\">Returned</Link></li>\r\n                <li><Link to=\"#\">Delivered</Link></li>\r\n                <li><Link to=\"#\">Pending</Link></li>\r\n                <li><Link to=\"#\">Returned</Link></li>\r\n                <li><Link to=\"#\">Delivered</Link></li>\r\n                <li><Link to=\"#\">Pending</Link></li>\r\n                <li><Link to=\"#\">Delivered</Link></li>\r\n              </ul>\r\n                <ul className=\"details\">\r\n                <li className=\"topic\">Total</li>\r\n                <li><Link to=\"#\">$204.98</Link></li>\r\n                <li><Link to=\"#\">$24.55</Link></li>\r\n                <li><Link to=\"#\">$25.88</Link></li>\r\n                <li><Link to=\"#\">$170.66</Link></li>\r\n                <li><Link to=\"#\">$56.56</Link></li>\r\n                <li><Link to=\"#\">$44.95</Link></li>\r\n                <li><Link to=\"#\">$67.33</Link></li>\r\n                <li><Link to=\"#\">$23.53</Link></li>\r\n                <li><Link to=\"#\">$46.52</Link></li>\r\n              </ul>\r\n          </div>\r\n          <div className=\"button\">\r\n            <Link to=\"#\">See All</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\nimport './jobsnew.css';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport '../viewJobs/Jobs';\r\nimport JobItem from './JobItem';\r\nimport UpdateJob from '../job-post-delete-update/UpdateJob';\r\nimport axios from \"axios\";\r\nimport NavSidebar from '../nav-sidebar/NavSidebar';\r\nimport PostJob from '../job-post-delete-update/PostJob';\r\nimport Cookies from 'js-cookie';\r\n\r\nexport default function JobsNew() {\r\n  const [selectedJob, setSelectedJob] = useState();\r\n  const [error, seterror] = useState();\r\n  const [jobs, setJobs] = useState([]);\r\n  const [refresh,setRefresh] = useState(false);\r\n\r\n  // VIEW JOB\r\n  const viewJob =(element)=>{\r\n    setSelectedJob(element);\r\n    togglePopupView();\r\n  }\r\n  //  UPDATE JOB\r\n  const updateJob =(element)=>{\r\n    setSelectedJob(element);\r\n    togglePopupUpdate();\r\n  }\r\n//  GET AL JOBS\r\n  const getAllJobs = async () => {\r\n    \r\n    // console.log(\"Moiz Khan\");\r\n        await axios\r\n      .get(`http://13.232.134.204:5000/job/viewRecruiterJobs`,{\r\n        headers: {\r\n          \"x-access-token\": Cookies.get(\"accessTokenRecruiter\")\r\n        }})\r\n      .then((res) => {\r\n        if (res.status >= 200 && res.status <= 299) {\r\n          setJobs(res.data.jobs);\r\n          console.log(res.data);\r\n        } else {\r\n          seterror(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // seterror(err.response.data.message);\r\n        console.log(err);\r\n      });\r\n      console.log(\"Moiz Khan\");\r\n  };\r\n  useEffect(() => {\r\n    getAllJobs();\r\n  }, [refresh]);\r\n\r\n  // POPUP\r\n  const [isOpenView, setIsOpenView] = useState(false);\r\n  const [isOpenUpdate, setIsOpenUpdate] = useState(false);\r\n\r\n  const togglePopupView = () => {\r\n    setIsOpenView(!isOpenView);\r\n  }\r\n  const togglePopupUpdate = () => {\r\n    setIsOpenUpdate(!isOpenUpdate);\r\n  }\r\n  \r\n  // DELETE JOB\r\n  \r\n    const deleteJob = async (id) =>\r\n    {\r\n      const response = await axios\r\n      .delete(`http://13.232.134.204:5000/job/deleteJob/${id}`)\r\n      .then((res) => {\r\n        if (res.status >= 200 && res.status <= 299) {\r\n          setRefresh(!refresh);\r\n        } else {\r\n          seterror(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        seterror(err.response.data.message);\r\n      });\r\n        // getAllJobs();\r\n    }\r\n    const styleLink ={\r\n      fontFamily:'sans-serif',\r\n      borderRadius: '4px',\r\n      textAlign: 'center',\r\n      padding: '5% 15% 6% 15%',\r\n      fontSize: '17px',\r\n      textDecoration: 'none',\r\n      color: 'white',\r\n      backgroundColor: '#218838'\r\n    }\r\n    const styleAddJob ={\r\n      fontFamily:'sans-serif',\r\n      borderRadius: '4px',\r\n      border: 'none',\r\n      textAlign: 'center',\r\n      padding: '1% 3% 1% 3%',\r\n      fontSize: '17px',\r\n      textDecoration: 'none',\r\n      color: 'white',\r\n      backgroundColor: '#91B7E1',\r\n      float: 'right',\r\n      margin: '-4% 0% 3% 0%'\r\n    }\r\n  return (\r\n<>\r\n  <NavSidebar/>\r\n    <div className='container recruiter-job-container'>\r\n    <h1 style={{margin: '3% 2% 0% 0%'}}>Jobs</h1>\r\n    <Link style={styleAddJob} to=\"/postjob\">Add Job </Link>\r\n \r\n<table id=\"recruiter-job-table\">\r\n  <thead>\r\n    <tr>\r\n      <th>Job Title</th>\r\n      <th>Job Description</th>\r\n      <th>Job Location</th>\r\n      <th>Required Experience</th>\r\n      <th>Work Level</th>\r\n      <th>Employment Type</th>\r\n      <th>Applicants</th>\r\n      <th>Actions</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n  {jobs?.map((element,index)=>(\r\n    <tr key={index}>\r\n      <td>{element.jobTitle}</td>\r\n      <td>{element.jobDescription.slice(0, 30)}....</td>\r\n      <td>{element.jobLocation}</td>\r\n      <td>{element.experienceRequired}</td>\r\n      <td>{element.workLevel}</td>\r\n      <td>{element.employmentType}</td>\r\n      <td>\r\n        <button><Link style={styleLink} to={`/applicants/${element.id}`}>View</Link></button>\r\n      </td>\r\n      <td>\r\n        <button onClick={()=>viewJob(element)} style={{marginRight: '1%',marginLeft: '-2%'}} className=\"btn-success\">View</button>\r\n        <button onClick={()=>updateJob(element)} style={{marginRight: '1%'}} className=\"btn-primary\">Update</button>\r\n        <button onClick={()=>deleteJob(element.id)} className=\"btn-danger\">Delete</button>\r\n      </td> \r\n    </tr>\r\n   ))}\r\n   </tbody>\r\n  {/* VIEW */}\r\n  <div>\r\n    {isOpenView && \r\n      <div className=\"recruiter-job-popup-box\">\r\n        <div className=\"recruiter-job-box\">\r\n          <span className=\"recruiter-job-close-icon\" onClick={togglePopupView}>x</span>\r\n          <JobItem\r\n            jobTitle ={selectedJob.jobTitle}\r\n            jobDescription ={selectedJob.jobDescription}\r\n            jobLocation ={selectedJob.jobLocation}\r\n            experienceRequired ={selectedJob.experienceRequired}\r\n            workLevel ={selectedJob.workLevel}\r\n            employmentType ={selectedJob.employmentType}\r\n            createdAt = {selectedJob.createdAt}\r\n          />\r\n        </div>\r\n      </div>\r\n    }\r\n  </div>\r\n  {/* UPDATE */}\r\n  <div>\r\n    {isOpenUpdate && \r\n      <div className=\"recruiter-job-popup-box\">\r\n        <div className=\"recruiter-job-box\">\r\n          <span className=\"recruiter-job-close-icon\" onClick={togglePopupUpdate}>x</span>\r\n          <UpdateJob \r\n            jobTitle ={selectedJob.jobTitle}\r\n            jobDescription ={selectedJob.jobDescription}\r\n            jobLocation ={selectedJob.jobLocation}\r\n            experienceRequired ={selectedJob.experienceRequired}\r\n            workLevel ={selectedJob.workLevel}\r\n            employmentType ={selectedJob.employmentType}\r\n            createdAt = {selectedJob.createdAt}\r\n            id={selectedJob.id}\r\n          />\r\n        </div>\r\n    </div>\r\n    }\r\n  </div>\r\n</table>\r\n</div>\r\n</>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport NavSidebar from '../dashboard/nav-sidebar/NavSidebar';\r\nimport { BrowserRouter as Router, Route, Link, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport './applicants.css';\r\n\r\nexport default function () {\r\n\r\n    const [refresh,setRefresh] = useState(false);\r\n    //  GET AL APPLICANTS BY JOB ID\r\n    const [applicants, setApplicants] = useState([]);\r\n    const [error, seterror] = useState();\r\n    \r\n  const getAllApplicantsById = async (id) => {\r\n    \r\n    // console.log(\"Moiz Khan\");\r\n        await axios\r\n      .get(`http://13.232.134.204:5000/jobApply/getApplicants/${id}`,{\r\n        headers: {\r\n          \"x-access-token\": Cookies.get(\"accessTokenRecruiter\")\r\n        }})\r\n      .then((res) => {\r\n        if (res.status >= 200 && res.status <= 299) {\r\n          setApplicants(res.data.jobApplies);\r\n          console.log(res.data);\r\n        } else {\r\n          seterror(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // seterror(err.response.data.message);\r\n        console.log(err);\r\n      });\r\n      console.log(\"Moiz Khan\");\r\n  };\r\n  const {id}=useParams();\r\n  useEffect(() => {\r\n    getAllApplicantsById(id);\r\n  }, [refresh]);\r\n      const styleLink ={\r\n        fontFamily:'sans-serif',\r\n        borderRadius: '4px',\r\n        textAlign: 'center',\r\n        padding: '3% 20% 3% 20%',\r\n        fontSize: '18px',\r\n        textDecoration: 'none',\r\n        color: 'white',\r\n        backgroundColor: '#04AA6D'\r\n      }\r\n  return (\r\n    <>\r\n        <NavSidebar/>\r\n        <div className='container applicants-container'>\r\n            <h1>Applicants</h1>\r\n            <table id=\"applicants-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Email ID</th>\r\n                        <th>CV</th>\r\n                        <th>Ranking Score</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {applicants?.map((element,index)=>(\r\n                    <tr key={index}>\r\n                        <td>{element.user.email}</td>\r\n                        <td><a target='_blank' href={`http://13.232.134.204:5000/public/uploads/${element.cv.CV}`}>View</a></td>\r\n                        <td>{element.score}</td>\r\n                    </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useState } from 'react';\r\nimport NavSidebar from '../nav-sidebar/NavSidebar'\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\nimport './test.css';\r\n\r\nexport default function Test() {\r\n    let recruiterTests = {testName: \"Game Development Technologies Test\"}\r\n    //  GET AL JOBS\r\n    const [jobs, setJobs] = useState([]);\r\n    const [error, seterror] = useState();\r\n  const getAllJobs = async () => {\r\n    \r\n    // console.log(\"Moiz Khan\");\r\n        await axios\r\n      .get(`http://13.232.134.204:5000/job/viewRecruiterJobs`,{\r\n        headers: {\r\n          \"x-access-token\": Cookies.get(\"accessTokenRecruiter\")\r\n        }})\r\n      .then((res) => {\r\n        if (res.status >= 200 && res.status <= 299) {\r\n          setJobs(res.data.jobs);\r\n          console.log(res.data);\r\n        } else {\r\n          seterror(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // seterror(err.response.data.message);\r\n        console.log(err);\r\n      });\r\n      console.log(\"Moiz Khan\");\r\n  };\r\n\r\n\r\n\r\n    const styleLink ={\r\n        fontFamily:'sans-serif',\r\n        borderRadius: '4px',\r\n        textAlign: 'center',\r\n        padding: '2% 7% 2% 7%',\r\n        fontSize: '17px',\r\n        textDecoration: 'none',\r\n        color: 'white',\r\n        marginRight: '6%'\r\n    }\r\n    const styleAddTest ={\r\n        fontFamily:'sans-serif',\r\n        borderRadius: '4px',\r\n        border: 'none',\r\n        textAlign: 'center',\r\n        padding: '1% 3% 1% 3%',\r\n        fontSize: '17px',\r\n        textDecoration: 'none',\r\n        color: 'white',\r\n        backgroundColor: '#91B7E1',\r\n        float: 'right',\r\n        margin: '-4% 0% 3% 0%'\r\n    }\r\n  return (\r\n    <>\r\n        <NavSidebar/>\r\n        <div className='container recruiter-test-container'>\r\n            <h1 style={{margin: '3% 2% 0% 0%'}}>Test</h1>\r\n            <Link style={styleAddTest} to=\"/addtest\">Add Test</Link>\r\n\r\n            <table id=\"recruiter-test-table\">\r\n                <tr>\r\n                    <th>Sr.</th>\r\n                    <th>Test Name</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n                <tr>\r\n                    <td><ol><li style={{position: 'center'}}></li></ol></td>\r\n                    <td>{recruiterTests.testName}</td>\r\n                    <td>\r\n                        <Link style={styleLink} className=\"btn btn-success\" to=\"/viewtest\">View</Link>\r\n                        <Link style={styleLink} className=\"btn btn-info\" to=\"\">Update</Link>\r\n                        <Link style={styleLink} className=\"btn btn-danger\" to=\"\">Delete</Link>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport NavSidebar from '../nav-sidebar/NavSidebar'\r\nimport AddQuestion from \"../questionPool/AddQuestion\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport './addtest.css';\r\n\r\nexport default function AddTest(props) {\r\n    // QUESTIONPOOL AREA\r\n  // POPUP\r\n  const [isOpenAddQuestion, setIsOpenAddQuestion] = useState(false);\r\n\r\n  const togglePopupAddQuestion = () => {\r\n    setIsOpenAddQuestion(!isOpenAddQuestion);\r\n  }\r\n  const styleAddQuestion ={\r\n    float: 'right'\r\n  }\r\n\r\n//   QUESTIONITEM AREA\r\n\r\n     // VIEW QUESTION\r\n     const [selectedQuestion, setSelectedQuestion] = useState();\r\n    const viewQuestion =(element)=>{\r\n    setSelectedQuestion(element);\r\n  }\r\n     //  GET ALL QUESTIONS\r\n    const [questions, setQuestions] = useState([]);\r\n    const getAllQuestions = async () => {\r\n    \r\n    // console.log(\"Moiz Khan\");\r\n        await axios\r\n      .get(`http://13.232.134.204:5000/questions/viewMyQuestions`,{\r\n        headers: {\r\n          \"x-access-token\": Cookies.get(\"accessTokenRecruiter\")\r\n        }})\r\n      .then((res) => {\r\n        if (res.status >= 200 && res.status <= 299) {\r\n          setQuestions(res.data.data);\r\n          console.log(res.data);\r\n        } else {\r\n          seterror(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // seterror(err.response.data.message);\r\n        console.log(err);\r\n      });\r\n      console.log(\"Khawar Khan\");\r\n  };\r\n  // useEffect(() => {\r\n  //   getAllQuestions();\r\n  // }, [refresh]);\r\n  useEffect(() => {\r\n    getAllQuestions();\r\n  });\r\n\r\n//   PAGE AREA\r\n  const h1Style ={\r\n    color: '#2c6f8b',\r\n    fontWeight: 'bold',\r\n    float: 'left'\r\n  }\r\n//   ADDTEST AREA\r\nconst [error, seterror] = useState();\r\nconst {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = async () => {}\r\n\r\n  const [optionList, setOptionList] = useState([]);\r\n  return (\r\n    <>\r\n        <NavSidebar/>\r\n        {/* QUESTIONPOOL AREA */}\r\n        <div className='addtest-float-container'>\r\n            <div className='addtest-float-child'>\r\n                    <h1 style={h1Style}>Question</h1>\r\n                    <div>\r\n                        <button style={styleAddQuestion} onClick={togglePopupAddQuestion} className=\"btn-addquestion\">Add Question</button>\r\n                        {isOpenAddQuestion && \r\n                            <div className=\"addtest-question-popup-box\">\r\n                                <div className=\"addtest-question-box\">\r\n                                    <span onClick={togglePopupAddQuestion} className=\"addtest-question-close-icon\" >x</span>\r\n                                    <AddQuestion/>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    {/* QUESTIONITEM AREA */}\r\n                    {questions.map((singleOption, index) =>(\r\n                    <div className=\"questionitem-area\" style={{marginTop: '10%', border: '1px solid grey', padding: '20px'}}>\r\n                        <h3 className=\"\" style={{color: \"#2c6f8b\"}}>\r\n                            {singleOption.question}\r\n                        </h3>\r\n                        <ol>\r\n                         {singleOption.questionOptions.map((item, index)=>(\r\n                           <li key={index} className=\"card-text text-muted\">  {item.option}</li>\r\n                          ))}\r\n                        </ol>\r\n                        <p style={{fontStyle: 'italic'}}>Category: {singleOption.category}</p>\r\n                        <p style={{color: 'chocolate'}}>Difficulty Level: {singleOption.difficultyLevel}</p>\r\n                    </div>\r\n                    ))}\r\n            </div>\r\n            <div className='addtest-float-child'>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <h1 style={h1Style}>Create Test</h1>\r\n                    <div className=\"addtest-error-messages\">{error}</div>\r\n                        <label className=\"addtest-form-label\">\r\n                        Test Name<span>* </span>\r\n                        </label>\r\n                        <span className=\"addtest-error-messages\">\r\n                            {errors.testName && errors.testName.type === \"required\" && (\r\n                                <span>This field is required</span>\r\n                            )}\r\n                        </span>\r\n                        <input\r\n                        id=\"testName\"\r\n                        placeholder=\"Enter Test Name\"\r\n                        {...register(\"testName\", { required: true})}\r\n                        />\r\n                        <input id=\"create-test-submit\" type=\"submit\" value=\"Create Test\" />\r\n                </form>\r\n            </div>\r\n                    \r\n                </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport NavSidebar from '../nav-sidebar/NavSidebar';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\nimport AddQuestion from \"../questionPool/AddQuestion\";\r\nimport UpdateQuestion from \"../questionPool/UpdateQuestion\";\r\n\r\nexport default function ViewTest(props) {\r\n    let testName= \"Amazon Web Services\";\r\n    let question = \"What is the Capital of Pakistan?\";\r\n    let options1 = \"Islamabad is the Capital of Pakistan.\";\r\n    let options2 = \"Karachi is the Capital of Pakistan.\";\r\n    let options3 = \"Lahore is the Capital of Pakistan.\";\r\n    let subject = \"Computer Science.\";\r\n    let difficultyLevel = \"hard\";\r\n\r\n    const styling ={\r\n        border: '1px solid grey', \r\n        padding: '20px',\r\n        float: 'right',\r\n        width: '80%',\r\n        margin: '0% 2% 0% 0%'\r\n    }\r\n\r\n    const h1viewtest ={\r\n        margin: '7.5% 0% 2% 19%',\r\n        fontWeight: 'bold',\r\n        color: '#2c6f8b',\r\n        float: 'left'\r\n    }\r\n\r\n    const [optionList, setOptionList] = useState([{option: ''},{option: ''}]);\r\n    const styleAddQuestion ={\r\n        fontFamily:'sans-serif',\r\n        borderRadius: '4px',\r\n        border: 'none',\r\n        textAlign: 'center',\r\n        padding: '1% 3% 1% 3%',\r\n        fontSize: '17px',\r\n        textDecoration: 'none',\r\n        color: 'white',\r\n        backgroundColor: '#91B7E1',\r\n        float: 'right',\r\n        marginTop: '7%',\r\n        marginRight: '2%'\r\n      }\r\n      const styleUpdateDeleteButton ={\r\n        float: 'right',\r\n        marginRight: '20px',\r\n        fontSize: '20px'\r\n      }\r\n    const [isOpenAddQuestion, setIsOpenAddQuestion] = useState(false);\r\n    const [isOpenUpdate, setIsOpenUpdate] = useState(false);\r\n    const [isOpenDelete, setIsOpenDelete] = useState(false);\r\n    const [isOpenUpdateTestName, setIsOpenUpdateTestName] = useState(false);\r\n\r\n    const togglePopupUpdateTestName = () => {\r\n        setIsOpenUpdateTestName(!isOpenUpdateTestName);\r\n      }\r\n  const togglePopupAddQuestion = () => {\r\n    setIsOpenAddQuestion(!isOpenAddQuestion);\r\n  }\r\n  const togglePopupUpdate = () => {\r\n    setIsOpenUpdate(!isOpenUpdate);\r\n  }\r\n  const togglePopupDelete = () => {\r\n    setIsOpenDelete(!isOpenDelete);\r\n  }\r\n\r\n//   EDIT TEST NAME\r\nconst [error, seterror] = useState();\r\nconst {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const h1Style ={\r\n    color: '#2c6f8b',\r\n    fontWeight: 'bold',\r\n    float: 'left'\r\n  }\r\n  const editTestNameStyle={\r\n        marginLeft: '10px',\r\n        // marginTop: '5px',\r\n        fontSize: '20px'\r\n  }\r\n  \r\n//   const [isTestName, setIsTestName] = useState();\r\n//   const handleEditTestName =()=>{\r\n//     setIsTestName(testName);\r\n//   }\r\n  return (\r\n    <>\r\n        <NavSidebar/>\r\n        <h1 style={h1viewtest}>\r\n            {testName}\r\n            <span onClick={togglePopupUpdateTestName} style={editTestNameStyle} className=\"glyphicon glyphicon-pencil\"></span>\r\n            {/* UPDATE */}\r\n            <div>\r\n              {isOpenUpdateTestName && \r\n                <div className=\"questionpool-popup-box\">\r\n                  <div className=\"questionpool-box\">\r\n                    <span className=\"questionpool-close-icon\" onClick={togglePopupUpdateTestName}>x</span>\r\n                    <form onSubmit={handleSubmit()}>\r\n                    <h1 style={h1Style}>Edit</h1>\r\n                    <div className=\"addtest-error-messages\">{error}</div>\r\n                        <label style={{fontSize:'16px',fontWeight:'500', marginTop: '80px',marginLeft: '-65px'}} >\r\n                        Test Name<span>* </span>\r\n                        </label>\r\n                        <span className=\"addtest-error-messages\">\r\n                            {errors.testName && errors.testName.type === \"required\" && (\r\n                                <span>This field is required</span>\r\n                            )}\r\n                        </span>\r\n                        <input\r\n                        id=\"testName\"\r\n                        placeholder=\"Enter Test Name\"\r\n                        {...register(\"testName\", { required: true})}\r\n                        />\r\n                        <input id=\"create-test-submit\" type=\"submit\" value=\"Create Test\" />\r\n                </form>\r\n                  </div>\r\n              </div>\r\n              }\r\n            </div>\r\n        </h1>\r\n        <button style={styleAddQuestion} onClick={togglePopupAddQuestion} className=\"btn\">Add Question</button>\r\n          <div>\r\n            {isOpenAddQuestion && \r\n              <div className=\"questionpool-popup-box\">\r\n                <div className=\"questionpool-box\">\r\n                  <span onClick={togglePopupAddQuestion} className=\"questionpool-close-icon\" >x</span>\r\n                  <AddQuestion/>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n        <div className=\"container\" style={styling}>\r\n            {optionList.map((optionList, index) =>(\r\n                <>\r\n                    <span  onClick={togglePopupDelete} style={styleUpdateDeleteButton} className=\"glyphicon glyphicon-trash\"></span>\r\n                    <span onClick={togglePopupUpdate} style={styleUpdateDeleteButton} className=\"glyphicon glyphicon-pencil\"></span>\r\n                   <h3 className=\"\" style={{color: \"#2c6f8b\"}}>\r\n                        <ol>\r\n                            <li>{question}{props.question}</li>\r\n                        </ol>\r\n                    </h3>\r\n            <ol>\r\n            <li className=\" text\" style={{color: 'green'}}> <h6 >{options1}{props.options}</h6></li>\r\n            <li className=\" text-muted\"><h6>{options2}{props.options}</h6></li>\r\n            <li className=\" text-muted\"><h6>{options3}{props.options}</h6></li>\r\n            </ol>\r\n            <p style={{fontStyle: 'italic',marginLeft: '1.5%'}}>{subject}{props.subject}</p>\r\n            <p style={{color: 'chocolate',marginLeft: '1.5%'}}>Difficulty Level: {difficultyLevel}{props.difficultyLevel}</p>\r\n            <hr/>\r\n            </>\r\n            ))}\r\n            {/* UPDATE */}\r\n            <div>\r\n              {isOpenUpdate && \r\n                <div className=\"questionpool-popup-box\">\r\n                  <div className=\"questionpool-box\">\r\n                    <span className=\"questionpool-close-icon\" onClick={togglePopupUpdate}>x</span>\r\n                    <UpdateQuestion/>\r\n                  </div>\r\n              </div>\r\n              }\r\n            </div>\r\n            {/* DELETE JOB */}\r\n            <div>\r\n            {/* {job.map((item,index)=>\r\n                      <button key={index} onClick={()=>deleteJob(item.jobId)}>Delete</button>\r\n                      )\r\n                  } */}\r\n            </div>\r\n        </div>\r\n\r\n    </>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { BsCheckCircle } from \"react-icons/bs\";\r\nimport axios from \"axios\";\r\nimport SignupImage from \"../../images/signupImage.svg\";\r\nimport \"./recruiter-sign-in-up.css\";\r\nimport Header from \"../header/Header\";\r\n\r\nexport default function RecruiterSignUp() {\r\n  var [error, seterror] = useState();\r\n  var [message, setmessage] = useState();\r\n  const navigate = useNavigate();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  \r\n  const onSubmit = async (data) => {\r\n    seterror(null);\r\n    if (data.password !== data.confirmPassword) {\r\n      seterror(\"Password and Confirm Password does not match\");\r\n    } else {\r\n      await axios\r\n        .post(`http://13.232.134.204:5000/recruiter/register`, data)\r\n        .then((res) => {\r\n          if (res.status === 201) {\r\n            setmessage(res.data.message);\r\n          } else {\r\n            seterror(res.data.message);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          seterror(err.response.data.message);\r\n        });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (message) {\r\n      const timer = setTimeout(() => {\r\n        navigate(\"/recruitersignin\");\r\n      }, 4000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [message]);\r\n\r\n  return (\r\n    <div className=\"recruiter-sign-up\">\r\n      <Header/>\r\n      {message && (\r\n        <div className=\"recruiter-success-message\">\r\n          <div className=\"recruiter-success-message-container\">\r\n            <div className=\"recruiter-success-message-top-wrapper\">\r\n            <BsCheckCircle size={80} />\r\n              <div>SUCCESS</div>\r\n            </div>\r\n            <div className=\"recruiter-success-message-bottom-wrapper\">\r\n            {message}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"recruiter-sign-up-left-container\">\r\n        <div className=\"recruiter-sign-up-left-wrapper\">\r\n          <h1>Sign Up</h1>\r\n          <p>Join And Grow Old With Us</p>\r\n          <div className=\"recruiter-google-sign-in\">\r\n            <Link to=\"\">\r\n              <FcGoogle className=\"recruiter-FcGoogle\" /> Sign in with Google\r\n            </Link>\r\n          </div>\r\n          <h3>\r\n            <span>or Sign up with Email</span>\r\n          </h3>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"recruiter-error-messages\">{error}</div>\r\n            <label className=\"recruiter-form-label\">\r\n              Email<span>* </span>\r\n            </label>\r\n            <span className=\"recruiter-error-messages\">\r\n              {errors.email && errors.email.type === \"required\" && (\r\n                <span>This field is required</span>\r\n              )}\r\n              {errors.email && errors.email.type === \"pattern\" && (\r\n                <span>Enter a valid email</span>\r\n              )}\r\n            </span>\r\n            <input\r\n              id=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              {...register(\"email\", { required: true, pattern: /^\\S+@\\S+$/i })}\r\n            />\r\n            <label className=\"recruiter-form-label\">\r\n              Password<span>* </span>\r\n            </label>\r\n            <span className=\"recruiter-error-messages\">\r\n              {errors.password && errors.password.type === \"required\" && (\r\n                <span>This field is required</span>\r\n              )}\r\n              {errors.password && errors.password.type === \"minLength\" && (\r\n                <span>\r\n                  Password is too short, minimum 8 characters required{\" \"}\r\n                </span>\r\n              )}\r\n            </span>\r\n            <input\r\n              id=\"password\"\r\n              type={\"password\"}\r\n              placeholder=\"Enter new password\"\r\n              {...register(\"password\", { required: true, minLength: 8 })}\r\n            />\r\n            <label className=\"recruiter-form-label\">\r\n              Confirm Password<span>* </span>\r\n            </label>\r\n            <span className=\"recruiter-error-messages\">\r\n              {errors.confirmPassword &&\r\n                errors.confirmPassword.type === \"required\" && (\r\n                  <span>This field is required</span>\r\n                )}\r\n              {errors.confirmPassword &&\r\n                errors.confirmPassword.type === \"minLength\" && (\r\n                  <span>\r\n                    Password is too short, minimum 8 characters required{\" \"}\r\n                  </span>\r\n                )}\r\n            </span>\r\n            <input\r\n              id=\"confirmPassword\"\r\n              type={\"password\"}\r\n              placeholder=\"Re-enter password\"\r\n              {...register(\"confirmPassword\", { required: true, minLength: 8 })}\r\n            />\r\n            {/*  */}\r\n            \r\n            <label className=\"recruiter-form-label\">\r\n              Company Name<span>* </span>\r\n            </label>\r\n            <span className=\"recruiter-error-messages\">\r\n              {errors.companyName && errors.companyName.type === \"required\" && (\r\n                <span>This field is required</span>\r\n              )}\r\n            </span>\r\n            <input\r\n              id=\"companyName\"\r\n              placeholder=\"Enter your company name\"\r\n              {...register(\"companyName\", { required: true})}\r\n            />\r\n\r\n            <label className=\"recruiter-form-label\">\r\n              Company Description<span>* </span>\r\n            </label>\r\n            <span className=\"recruiter-error-messages\">\r\n              {errors.companyDescription && errors.companyDescription.type === \"required\" && (\r\n                <span>This field is required</span>\r\n              )}\r\n            </span>\r\n            <input\r\n              id=\"companyDescription\"\r\n              placeholder=\"Enter your company Description\"\r\n              {...register(\"companyDescription\", { required: true})}\r\n            />\r\n\r\n            <label className=\"recruiter-form-label\">\r\n              Total Employees<span>* </span>\r\n            </label>\r\n            <span className=\"recruiter-error-messages\">\r\n              {errors.totalEmployees && errors.totalEmployees.type === \"required\" && (\r\n                <span>This field is required</span>\r\n              )}\r\n            </span>\r\n            <input\r\n              id=\"totalEmployees\"\r\n              type=\"number\"\r\n              placeholder=\"Enter total number of employees\"\r\n              {...register(\"totalEmployees\", { required: true})}\r\n            />  \r\n\r\n            <label className=\"recruiter-form-label\">\r\n              Company Creation Date<span>* </span>\r\n            </label>\r\n            <span className=\"recruiter-error-messages\">\r\n              {errors.founded && errors.founded.type === \"required\" && (\r\n                <span>This field is required</span>\r\n              )}\r\n            </span>\r\n            <input\r\n              id=\"founded\"\r\n              type=\"date\"\r\n              placeholder=\"Enter company's creation date\"\r\n              {...register(\"founded\", { required: true})}\r\n            />  \r\n\r\n            <div className=\"recruiter-terms\">\r\n              <label className=\"recruiter-terms-checkbox\">\r\n                <input type=\"checkbox\" />I agree to the Terms & Conditions\r\n              </label>\r\n            </div>\r\n            <input id=\"signup-submit\" type=\"submit\" value=\"Sign Up\" />\r\n          </form>\r\n\r\n          <p className=\"recruiter-already-registered\">\r\n            Already have an Account?\r\n            <Link to=\"/signin\"> Sign in</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"recruiter-sign-up-right-container\">\r\n        <div className=\"recruiter-sign-up-right-wrapper\">\r\n          <img src={SignupImage} alt=\"signup\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport LoginImage from \"../../images/loginImage.svg\";\r\nimport \"./recruiter-sign-in-up.css\";\r\nimport Header from \"../header/Header\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../../action\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport default function RecruiterSignIn() {\r\n  const [error, seterror] = useState();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = async (data) => {\r\n    await axios\r\n      .post(`http://13.232.134.204:5000/recruiter/login`, data, {\r\n        headers: {\r\n          \"x-access-token\": \"application/json\",\r\n        },\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          dispatch(\r\n            login({\r\n              email: res.data.data.email,\r\n              id: res.data.data.id,\r\n              isLoggedIn: true,\r\n            })\r\n          );\r\n          Cookies.set(\"accessTokenRecruiter\", res.data.data.token);\r\n          navigate(\"/dashboardrecruiter\");\r\n        } else {\r\n          seterror(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // seterror(err.response.data.message);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"recruiter-sign-in\">\r\n      <Header />\r\n      <div className=\"recruiter-sign-in-left-container\">\r\n        <div className=\"recruiter-sign-in-left-wrapper\">\r\n          <h1>Login</h1>\r\n          <p>We Handpick The Best Among The Rest</p>\r\n          <div className=\"recruiter-google-sign-in\">\r\n            <Link to=\"\">\r\n              <FcGoogle className=\"recruiter-FcGoogle\" /> Sign in with Google\r\n            </Link>\r\n          </div>\r\n          <h3>\r\n            <span>or Sign in with Email</span>\r\n          </h3>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"recruiter-error-messages\">{error}</div>\r\n            <label className=\"recruiter-form-label\">\r\n              Email<span>* </span>\r\n            </label>\r\n            <span className=\"recruiter-error-messages\">\r\n              {errors.email && errors.email.type === \"required\" && (\r\n                <span>This field is required</span>\r\n              )}\r\n              {errors.email && errors.email.type === \"pattern\" && (\r\n                <span>Enter a valid email</span>\r\n              )}\r\n            </span>\r\n            <input\r\n              id=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              {...register(\"email\", { required: true, pattern: /^\\S+@\\S+$/i })}\r\n            />\r\n            <label className=\"recruiter-form-label\">\r\n              Password<span>* </span>\r\n            </label>\r\n            <span className=\"recruiter-error-messages\">\r\n              {errors.password && errors.password.type === \"required\" && (\r\n                <span>This field is required</span>\r\n              )}\r\n            </span>\r\n            <input\r\n              id=\"password\"\r\n              type={\"password\"}\r\n              placeholder=\"Enter your password\"\r\n              {...register(\"password\", { required: true })}\r\n            />\r\n            {/*errors.password && <span>This field is required</span>*/}\r\n            <div className=\"recruiter-remember-forgot\">\r\n              <label className=\"recruiter-remember-me-checkbox\">\r\n                <input type=\"checkbox\" />\r\n                Remember me\r\n              </label>\r\n              <Link to=\"\">Forgot password?</Link>\r\n            </div>\r\n            <input id=\"login-submit\" type=\"submit\" value=\"Login\" />\r\n          </form>\r\n          <p className=\"recruiter-not-registered\">\r\n            Not registered yet?\r\n            <Link to=\"/recruitersignup\"> Create an Account</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"recruiter-sign-in-right-container\">\r\n        <div className=\"recruiter-sign-in-right-wrapper\">\r\n          <img src={LoginImage} alt=\"login-image\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport ChatInput from \"./components/chat/ChatInput\";\r\nimport Home from \"./components/home/Home\";\r\n// import Jobs from \"./components/jobs/Jobs\";\r\nimport UpdateProfile from \"./components/updateProfile/UpdateProfile\";\r\nimport PostJob from \"./components/dashboard/job-post-delete-update/PostJob\";\r\nimport UpdateJob from \"./components/dashboard/job-post-delete-update/UpdateJob\";\r\nimport JobItem from \"./components/dashboard/jobsNew/JobItem\";\r\nimport Jobs from \"./components/dashboard/viewJobs/Jobs\";\r\nimport DeleteJob from \"./components/dashboard/job-post-delete-update/DeleteJob\"\r\nimport Wait from \"./components/sign-in-up/Wait\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"./action\";\r\n// import RecruiterDashboard from \"./components/recruiterDashboard/RecruiterDashboard\";\r\nimport QuestionItem from \"./components/dashboard/questionPool/QuestionItem\";\r\nimport AddQuestion from \"./components/dashboard/questionPool/AddQuestion\";\r\nimport UpdateQuestion from \"./components/dashboard/questionPool/UpdateQuestion\";\r\nimport DeleteQuestion from \"./components/dashboard/questionPool/DeleteQuestion\";\r\nimport QuestionPool from \"./components/dashboard/questionPool/QuestionPool\";\r\nimport Quiz from \"./components/dashboard/quiz/Quiz\";\r\nimport DashboardRecruiter from \"./components/dashboard/dashboardRecruiter/DashboardRecruiter\";\r\nimport JobsNew from \"./components/dashboard/jobsNew/JobsNew\";\r\nimport NavSidebar from \"./components/dashboard/nav-sidebar/NavSidebar\";\r\nimport Applicants from \"./components/applicants/Applicants\";\r\nimport Test from \"./components/dashboard/test/Test\";\r\nimport AddTest from \"./components/dashboard/test/AddTest\";\r\nimport ViewTest from \"./components/dashboard/test/ViewTest\";\r\nimport RecruiterSignUp from \"./components/sign-in-up/RecruiterSignUp\";\r\nimport RecruiterSignIn from \"./components/sign-in-up/RecruiterSignIn\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    authRecruiter();\r\n  }, []);\r\n\r\n  const authRecruiterAPICall = async () => {\r\n    const response = await axios.get(\r\n      \"http://localhost:5000/common/authenticate\",\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        withCredentials: true,\r\n      }\r\n    );\r\n    return response;\r\n  };\r\n  const authRecruiter = async () => {\r\n    await authRecruiterAPICall()\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          dispatch(login({ email: res.data.decoded.email, isLoggedIn: true }));\r\n        } else {\r\n          console.log(\"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err\", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        {/* <Route path=\"/jobs\" element={<Jobs />} /> */}\r\n\r\n        <Route path=\"/recruitersignup\" element={<RecruiterSignUp />} />\r\n        <Route path=\"/recruitersignin\" element={<RecruiterSignIn />} />\r\n        <Route path=\"/chat\" element={<ChatInput />} />\r\n        <Route path=\"/updateProfile\" element={<UpdateProfile />} />\r\n        <Route path=\"*\" element={<h1>404: No page found</h1>} />\r\n        <Route path=\"/wait\" element={<Wait />} />\r\n        <Route path=\"/postjob\" element={<PostJob />} />\r\n        <Route path=\"/updatejob\" element={<UpdateJob />} />\r\n        <Route path=\"/jobitem\" element={<JobItem />} />\r\n        <Route path=\"/jobs\" element={<Jobs />} />\r\n        <Route path=\"/deletejob\" element={<DeleteJob />} />\r\n        <Route path=\"/questionitem\" element={<QuestionItem />} />\r\n        <Route path=\"/addquestion\" element={<AddQuestion />} />\r\n        <Route path=\"/updatequestion\" element={<UpdateQuestion />} />\r\n        <Route path=\"/deletequestion\" element={<DeleteQuestion />} />\r\n        <Route path=\"/questionpool\" element={<QuestionPool />} />\r\n        {/* DASHBOARD RECRUITER */}\r\n        <Route path=\"/dashboardrecruiter\" element={<DashboardRecruiter />} />\r\n        <Route path=\"/navsidebar\" element={<NavSidebar />} />\r\n        <Route path=\"/jobsnew\" element={<JobsNew />} />\r\n        <Route path=\"/applicants/:id\" element={<Applicants />} />\r\n        <Route path=\"/test\" element={<Test />} />\r\n        <Route path=\"/addtest\" element={<AddTest />} />\r\n        <Route path=\"/viewtest\" element={<ViewTest />} />\r\n        <Route path=\"/quiz\" element={<Quiz />} />\r\n        {/* <Route path=\"/applicants/:id\" element={<JobsNew/>} /> */}\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { Provider } from \"react-redux\";\r\nimport userReducer from \"./action\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","module.exports = __webpack_public_path__ + \"static/media/postjob.c65150db.jpg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.768d8cd1.jpg\";"],"sourceRoot":""}